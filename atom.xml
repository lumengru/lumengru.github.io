<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>卢梦如的年轮</title>
  <subtitle>心血来潮</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-11T05:50:23.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>卢梦如</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Swift-时间戳</title>
    <link href="http://yoursite.com/2017/05/31/Swift-%E6%97%B6%E9%97%B4%E6%88%B3/"/>
    <id>http://yoursite.com/2017/05/31/Swift-时间戳/</id>
    <published>2017-05-31T02:47:52.000Z</published>
    <updated>2017-06-11T05:50:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>时间戳是指格林威治时间1970年01月01日00时00分00秒(北京时间1970年01月01日08时00分00秒)起至现在的总秒数。</p>
<a id="more"></a>
<h2 id="获取现在的时间戳-秒"><a href="#获取现在的时间戳-秒" class="headerlink" title="获取现在的时间戳(秒)"></a>获取现在的时间戳(秒)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">getNowDataString</span><span class="params">()</span></span> -&gt; <span class="type">String</span> &#123;</div><div class="line">        </div><div class="line">     <span class="comment">// 当前的时间 例如 "May 31, 2017, 10:43 AM"</span></div><div class="line">        </div><div class="line">     <span class="keyword">let</span> date:<span class="type">NSDate</span> = <span class="type">NSDate</span>()</div><div class="line">        </div><div class="line">     <span class="comment">// 把时间转换成时间戳 例如 1496198622.22576</span></div><div class="line">        </div><div class="line">     <span class="keyword">let</span> time: <span class="type">TimeInterval</span> = date.timeIntervalSince1970 </div><div class="line">        </div><div class="line">     <span class="keyword">return</span> <span class="type">String</span>(format: <span class="string">"%.0f"</span>, time)</div><div class="line">        </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="根据时间戳-和-指定的时间格式来返回时间-秒"><a href="#根据时间戳-和-指定的时间格式来返回时间-秒" class="headerlink" title="根据时间戳 和 指定的时间格式来返回时间 (秒)"></a>根据时间戳 和 指定的时间格式来返回时间 (秒)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">yearsMonthDay</span><span class="params">(time: NSNumber, format: String)</span></span> -&gt; <span class="type">String</span> &#123;</div><div class="line">        </div><div class="line">     <span class="comment">// yyyy-MM-dd HH:mm:ss</span></div><div class="line">        </div><div class="line">     <span class="comment">//转换为时间</span></div><div class="line">     </div><div class="line">     <span class="keyword">let</span> timeInterval:<span class="type">TimeInterval</span> = <span class="type">TimeInterval</span>(<span class="type">Int</span>(time))</div><div class="line">        </div><div class="line">     <span class="keyword">let</span> date = <span class="type">Date</span>(timeIntervalSince1970: timeInterval)</div><div class="line">        </div><div class="line">     <span class="comment">//格式话输出</span></div><div class="line">     </div><div class="line">     <span class="keyword">let</span> dformatter = <span class="type">DateFormatter</span>()</div><div class="line">        </div><div class="line">     dformatter.dateFormat = format</div><div class="line">        </div><div class="line">     <span class="keyword">return</span> dformatter.string(from: date)</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="时间戳转换时间-秒"><a href="#时间戳转换时间-秒" class="headerlink" title="时间戳转换时间 (秒)"></a>时间戳转换时间 (秒)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">dateFrom</span><span class="params">(time: String, format: String)</span></span> -&gt; <span class="type">String</span> &#123;</div><div class="line">  </div><div class="line">      <span class="comment">//格式话输出</span></div><div class="line">      </div><div class="line">      <span class="keyword">let</span> dfmatter = <span class="type">DateFormatter</span>()</div><div class="line">        </div><div class="line">      dfmatter.dateFormat = format</div><div class="line">        </div><div class="line">      <span class="keyword">let</span> date = dfmatter.date(from: time)</div><div class="line">        </div><div class="line">      <span class="keyword">let</span> dateStamp:<span class="type">TimeInterval</span> = date!.timeIntervalSince1970</div><div class="line">        </div><div class="line">      <span class="keyword">let</span> dateSt:<span class="type">Int</span> = <span class="type">Int</span>(dateStamp)</div><div class="line">        </div><div class="line">      <span class="keyword">return</span> <span class="type">String</span>(dateSt)</div><div class="line">      </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="时间格式"><a href="#时间格式" class="headerlink" title="时间格式"></a>时间格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">G: 公元时代，例如AD公元</div><div class="line">yy: 年的后2位</div><div class="line">yyyy: 完整年</div><div class="line">MM: 月，显示为1-12,带前置0</div><div class="line">MMM: 月，显示为英文月份简写,如 Jan</div><div class="line">MMMM: 月，显示为英文月份全称，如 Janualy</div><div class="line">dd: 日，2位数表示，如02</div><div class="line">d: 日，1-2位显示，如2，无前置0</div><div class="line">EEE: 简写星期几，如Sun</div><div class="line">EEEE: 全写星期几，如Sunday</div><div class="line">aa: 上下午，AM/PM</div><div class="line">H: 时，24小时制，0-23</div><div class="line">HH: 时，24小时制，带前置0</div><div class="line">h: 时，12小时制，无前置0</div><div class="line">hh: 时，12小时制，带前置0</div><div class="line">m: 分，1-2位</div><div class="line">mm: 分，2位，带前置0</div><div class="line">s: 秒，1-2位</div><div class="line">ss: 秒，2位，带前置0</div><div class="line">S: 毫秒</div><div class="line">Z： GMT（时区）</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时间戳是指格林威治时间1970年01月01日00时00分00秒(北京时间1970年01月01日08时00分00秒)起至现在的总秒数。&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swift 功能" scheme="http://yoursite.com/tags/Swift-%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>Swift-把事件写入到日历中</title>
    <link href="http://yoursite.com/2017/05/31/Swift-%E6%8A%8A%E4%BA%8B%E4%BB%B6%E5%86%99%E5%85%A5%E5%88%B0%E6%97%A5%E5%8E%86%E4%B8%AD/"/>
    <id>http://yoursite.com/2017/05/31/Swift-把事件写入到日历中/</id>
    <published>2017-05-31T02:21:14.000Z</published>
    <updated>2017-06-11T05:43:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>把APP事件写入到苹果软件<strong>日历</strong>中</p>
<a id="more"></a>
<h2 id="事件添加"><a href="#事件添加" class="headerlink" title="事件添加"></a>事件添加</h2><ul>
<li>导入头文件 <strong>import EventKit</strong></li>
<li>创建 <strong>EKEventStore</strong>类型的实例<strong>eventStore</strong> 以及事件的id <strong>eventIdentifier</strong></li>
<li><p>获取请求权限</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> eventStore: <span class="type">EKEventStore</span>!</div><div class="line">      </div><div class="line">    eventStore.requestAccess(to: .event) &#123; (success, error) <span class="keyword">in</span></div><div class="line">          </div><div class="line">        <span class="keyword">if</span> error != <span class="literal">nil</span> &#123;</div><div class="line">              </div><div class="line">            <span class="comment">// 错误中心</span></div><div class="line">            <span class="built_in">print</span>(error ?? <span class="string">""</span>)</div><div class="line">              </div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> !success &#123;</div><div class="line">              </div><div class="line">            <span class="comment">// 用户被拒绝</span></div><div class="line">              </div><div class="line">            <span class="built_in">print</span>(error ?? <span class="string">""</span>)</div><div class="line">              </div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">              </div><div class="line">            <span class="comment">// 创建事件</span></div><div class="line">              </div><div class="line">        &#125;</div><div class="line">          </div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>在else里面创建事件</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> event: <span class="type">EKEvent</span> = <span class="type">EKEvent</span>(eventStore: <span class="keyword">self</span>.eventStore)</div><div class="line">      </div><div class="line">    event.title = <span class="string">"您今天该还款了,借贷宝 1000元"</span></div><div class="line">      </div><div class="line">    event.location = <span class="string">"我在上海浦东软件园"</span></div><div class="line">      </div><div class="line">    <span class="comment">// 开始时间 应该传入时间戳</span></div><div class="line">      </div><div class="line">    event.startDate = <span class="keyword">self</span>.dateFrom(time: <span class="string">"2017-05-27 11:37:00"</span>, format: <span class="string">"yyyy-MM-dd HH:mm:ss"</span>)</div><div class="line">      </div><div class="line">    <span class="comment">// 结束时间 时间到了 该事件从日历中消失</span></div><div class="line">      </div><div class="line">    event.endDate = <span class="keyword">self</span>.dateFrom(time: <span class="string">"2017-05-27 11:38:00"</span>, format: <span class="string">"yyyy-MM-dd HH:mm:ss"</span>)</div><div class="line">      </div><div class="line">    <span class="comment">// 提醒时间 按照秒来计算</span></div><div class="line">      </div><div class="line">    event.addAlarm(<span class="type">EKAlarm</span>(relativeOffset: -<span class="number">10</span>))</div><div class="line">      </div><div class="line">    event.addAlarm(<span class="type">EKAlarm</span>(relativeOffset: -<span class="number">30</span>))</div><div class="line">      </div><div class="line">    event.addAlarm(<span class="type">EKAlarm</span>(relativeOffset: -<span class="number">50</span>))</div><div class="line">      </div><div class="line">    event.calendar = <span class="keyword">self</span>.eventStore.defaultCalendarForNewEvents</div><div class="line">      </div><div class="line">    <span class="keyword">do</span> &#123;</div><div class="line">          </div><div class="line">        <span class="comment">// 事件添加成功</span></div><div class="line">          </div><div class="line">        <span class="keyword">try</span> <span class="keyword">self</span>.eventStore.save(event, span: .thisEvent)</div><div class="line">          </div><div class="line">        <span class="built_in">print</span>(event.eventIdentifier)</div><div class="line">          </div><div class="line">        <span class="keyword">self</span>.eventIdentifier = event.eventIdentifier</div><div class="line">          </div><div class="line">    &#125; <span class="keyword">catch</span> &#123;</div><div class="line">          </div><div class="line">        <span class="built_in">print</span>(<span class="string">"有坏银！"</span>)</div><div class="line">          </div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="事件删除"><a href="#事件删除" class="headerlink" title="事件删除"></a>事件删除</h2><ul>
<li><p>根据之前获取的id <strong>“eventIdentifier”</strong></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> eventToRemove = eventStore.event(withIdentifier: eventIdentifier!)</div><div class="line">      </div><div class="line">    <span class="keyword">if</span> (eventToRemove != <span class="literal">nil</span>) &#123;</div><div class="line">          </div><div class="line">        <span class="keyword">do</span> &#123;</div><div class="line">              </div><div class="line">            <span class="keyword">try</span> eventStore.remove(eventToRemove!, span: .thisEvent)</div><div class="line">              </div><div class="line">        &#125; <span class="keyword">catch</span> &#123;</div><div class="line">              </div><div class="line">            <span class="built_in">print</span>(<span class="string">"Bad things happened"</span>)</div><div class="line">              </div><div class="line">        &#125;</div><div class="line">          </div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把APP事件写入到苹果软件&lt;strong&gt;日历&lt;/strong&gt;中&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swift 功能" scheme="http://yoursite.com/tags/Swift-%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>HTML-CSS显示模式</title>
    <link href="http://yoursite.com/2016/12/26/HTML-CSS%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2016/12/26/HTML-CSS显示模式/</id>
    <published>2016-12-26T12:37:53.000Z</published>
    <updated>2017-06-08T06:28:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTML5的CSS的显示模式</p>
<a id="more"></a>
<h2 id="div"><a href="#div" class="headerlink" title="div"></a>div</h2><ul>
<li><p>作用: 一般用于配合CSS完成网页的<strong>基本布局</strong></p>
</li>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">	&lt;style&gt;</div><div class="line">		</div><div class="line">		.header&#123;</div><div class="line">				</div><div class="line">			width: 980px;</div><div class="line">			height: 100px;</div><div class="line">			background: red;</div><div class="line">			margin: auto;</div><div class="line">			margin-bottom: 10px;</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">		.content&#123;</div><div class="line">				</div><div class="line">			width: 980px;</div><div class="line">			height: 500px;</div><div class="line">			background: green;</div><div class="line">			margin: auto;</div><div class="line">			margin-bottom: 10px;</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">		.footer&#123;</div><div class="line">				</div><div class="line">			width: 980px;</div><div class="line">			height: 100px;</div><div class="line">			background: blue;</div><div class="line">			margin: auto;</div><div class="line">			margin-bottom: 10px;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">	&lt;/style&gt;</div><div class="line"></div><div class="line">	&lt;div class=&quot;header&quot;&gt;</div><div class="line">			</div><div class="line">		&lt;div class=&quot;logo&quot;&gt;</div><div class="line">				</div><div class="line">		&lt;/div&gt;</div><div class="line">			</div><div class="line">		&lt;div class=&quot;nav&quot;&gt;</div><div class="line">				</div><div class="line">				</div><div class="line">		&lt;/div&gt;</div><div class="line">			</div><div class="line">	&lt;/div&gt;</div><div class="line">		</div><div class="line">	&lt;div class=&quot;content&quot;&gt;</div><div class="line">			</div><div class="line">		&lt;div class=&quot;aside&quot;&gt;</div><div class="line">				</div><div class="line">		&lt;/div&gt;</div><div class="line">			</div><div class="line">		&lt;div class=&quot;article&quot;&gt;</div><div class="line">				</div><div class="line">		&lt;/div&gt;</div><div class="line">			</div><div class="line">	&lt;/div&gt;</div><div class="line">		</div><div class="line">	&lt;div class=&quot;footer&quot;&gt;</div><div class="line">			</div><div class="line">			</div><div class="line">	&lt;/div&gt;</div><div class="line">	</div><div class="line">	```	</div><div class="line"></div><div class="line">## span</div><div class="line"></div><div class="line">* 作用: 一般用于配合CSS修改网页中的一些**局部信息**</div><div class="line"></div><div class="line">* 示例:</div></pre></td></tr></table></figure>
  <style>

      span{

          color: red;

      }

  </style>

  <p>努力到<span>无能为力</span>, 拼搏到<span>感动自己</span></p>

  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 区别</div><div class="line">			</div><div class="line">* div会单独占领一行, 而span不会单独占领一行</div><div class="line"></div><div class="line">* 是一个容器级别的标签, 而span是一个文本级别的标签</div><div class="line">			</div><div class="line">	* 容器级别的标签和文本级别的标签的区别</div><div class="line">			</div><div class="line">		* 容器级的标签中可以嵌套其他所有的标签</div><div class="line">	</div><div class="line">		* 文本级的标签中只能嵌套文字/超链接/图片</div><div class="line">			</div><div class="line">	* 容器级的标签</div></pre></td></tr></table></figure>
<pre><code>div h ul ol dl li ...

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">		</div><div class="line">* 文本级的标签</div></pre></td></tr></table></figure>

span p buis stong em ins del ...

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">			</div><div class="line">## CSS显示模式</div><div class="line"></div><div class="line">* 在HTML中,HTML将所有的标签分为两类, 分别是**容器级**和**文本级**</div><div class="line"></div><div class="line">* 在CSS中CSS也将所有的标签分为两类, 分别是**块级元素**和**行内元素**</div><div class="line">			</div><div class="line">	* **块级元素**和**行内元素**</div><div class="line">			</div><div class="line">		* 块级元素会**独占一行**(所有的容器级标签都是块级元素)</div><div class="line">			</div><div class="line">		* 行内元素**不会独占一行**(在文本级标签中除了p标签都是行内标签)</div><div class="line">			</div><div class="line">	* 块级元素和行内元素的区别</div><div class="line">		</div><div class="line">		* 块级元素</div><div class="line">			</div><div class="line">			* 独占一行</div><div class="line">			* 如果没有设置宽度, 那么默认和父元素一样宽</div><div class="line">			* 如果设置了宽高, 那么就按照设置的来显示</div><div class="line">			</div><div class="line">		* 行内元素</div><div class="line">			</div><div class="line">			* 不会独占一行</div><div class="line">			* 如果没有设置宽度, 那么默认和内容一样宽</div><div class="line">			* 行内元素不可以设置宽度和高度</div><div class="line">				</div><div class="line">		* 行内块级元素</div><div class="line">				</div><div class="line">			* 为了能够让元素既不独占一行, 又可以设置宽度和高度</div><div class="line">			</div><div class="line">## 转换元素显示模式</div><div class="line">			</div><div class="line">* 设置**display**属性</div><div class="line">			</div><div class="line">* 取值:</div><div class="line">			</div><div class="line">	* **block** 块级</div><div class="line">	* **inline** 行内</div><div class="line">	* **inline-block** 行内块级	</div><div class="line"></div><div class="line">* 示例</div></pre></td></tr></table></figure>
</code></pre>  <style type="text/css">

      div{

          display: inline;
          background: red;
          width: 200px;
          height: 100px;
      }

      span{

          display: block;
          background: red;
          width: 200px;
          height: 100px;

      }

      .cc{

          color: blue;        
          width: 200px;
          height: 100px;
          display: inline-block;

      }

  </style>

<p>  <div>我是div</div><br>  <div>我是div</div><br>  <span>我是span</span><br>  <hr><br>  <span>我是span</span></p>
  <hr>

<p>  </p><p class="cc">我是段落</p><br>  <b class="cc">我是加粗</b><p></p>
<p>  ```</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML5的CSS的显示模式&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://yoursite.com/categories/HTML5/"/>
    
    
      <category term="HTML5 CSS" scheme="http://yoursite.com/tags/HTML5-CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML-CSS的三大特性</title>
    <link href="http://yoursite.com/2016/12/26/HTML-CSS%E7%9A%84%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7/"/>
    <id>http://yoursite.com/2016/12/26/HTML-CSS的三大特性/</id>
    <published>2016-12-26T12:13:38.000Z</published>
    <updated>2017-06-08T06:17:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTML5的CSS的三大特性</p>
<a id="more"></a>
<h2 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h2><ul>
<li><p>作用: 给<strong>父元素</strong>设置一些属性, 子元素也可以使用, 这个就是继承性</p>
</li>
<li><p>注意点: </p>
<ul>
<li><p>并不是所有的属性都可以继承,只有以color/ font-/ text-/line开头的属性才可以继承</p>
</li>
<li><p>在CSS中继承不仅仅是<strong>直接子元素</strong>可以继承, 只要是后代都可以继承</p>
</li>
<li><p>CSS继承性中的特殊性</p>
<ul>
<li><p>a标签的<strong>文字颜色</strong>和<strong>下划线</strong>是不能继承的</p>
</li>
<li><p>h标签的<strong>文字大小</strong>是不能继承的</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>应用场景</p>
<ul>
<li><p>一般用于设置网页上的共性的信息, 例如网页的文字颜色,字体,文字大小等内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">	&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">			</div><div class="line">		div&#123;</div><div class="line">				</div><div class="line">			color: red;</div><div class="line">			font-size: 30px;</div><div class="line">				</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">		&lt;/style&gt;</div><div class="line"> 		</div><div class="line">		&lt;div&gt;</div><div class="line">			</div><div class="line">		&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">			</div><div class="line">	&lt;/div&gt;</div><div class="line">	</div><div class="line">	```	 	</div><div class="line">		 </div><div class="line">## 层叠性</div><div class="line"></div><div class="line">* 作用: 层叠性就是CSS**处理冲突**的一种能力</div><div class="line">			</div><div class="line">* 注意点</div><div class="line">	</div><div class="line">	* 层叠性只有在多个选择器选中**同一个标签**然后又设置了相同的属性,才会发生层叠性</div><div class="line">			</div><div class="line">	* CSS 全称 Cascading StyleSheet</div></pre></td></tr></table></figure>
<pre><code>&lt;style type=&quot;text/css&quot;&gt;

    p{
        color: red;
    }

&lt;/style&gt;

&lt;p id=&quot;identity&quot; class=&quot;para&quot;&gt;我是段落&lt;/p&gt;

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 优先级</div><div class="line">			</div><div class="line">* 作用: 当多个选择器选中**同一个标签**, 并且给同一个标签设置相同的属性时, 如何层叠就由优先级来确定</div><div class="line">			</div><div class="line">* 优先级判断的三中方式:</div><div class="line">			</div><div class="line">	* 是否是直接选中(间接选中就是继承), 如果是间接选中, 那么谁离目标标签**比较近**就听谁的</div><div class="line">	</div><div class="line">	* 是否是相同的选择器, 如果都是直接选中 并且都是同类型的选择器, 那么谁写在**后面**就听谁的</div><div class="line">	</div><div class="line">	* 不同选择器, 如果都是直接选中, 并且不是想同类型的选择器, 就会按照选择器的优先级来层叠</div></pre></td></tr></table></figure>

id &gt; 类 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认

```
</code></pre></li>
</ul>
</li>
</ul>
<h2 id="优先级之-important"><a href="#优先级之-important" class="headerlink" title="优先级之 !important"></a>优先级之 !important</h2><ul>
<li><p>作用: 用于提升某个直接选中标签的选择器中的某个属性的优先级, 可以将被指定的属性的优先级提升为<strong>最高</strong></p>
</li>
<li><p>注意点</p>
<ul>
<li><p>important 只能用于<strong>直接选中</strong>, 不能用于间接选中</p>
</li>
<li><p>通配符选择器选中的标签也是直接选中的</p>
</li>
<li><p>!important 只能提升<strong>被指定的属性</strong>的优先级, 其他属性的优先级不会被提升</p>
</li>
<li><p>!important 必须写在属性值的<strong>分号前面</strong></p>
</li>
<li><p>!important 前面的感叹号<strong>不能省略</strong></p>
</li>
</ul>
</li>
</ul>
<h2 id="优先级之权重问题"><a href="#优先级之权重问题" class="headerlink" title="优先级之权重问题"></a>优先级之权重问题</h2><ul>
<li><p>作用: 当多个选择器混合在一起使用时, 我们可以通过<strong>计算权重</strong>来判断谁的优先级最高</p>
</li>
<li><p>权重的计算规则</p>
<ul>
<li><p>首先先计算选择器中有多少个<strong>id</strong>, <strong>id多的</strong>选择器优先级最高</p>
</li>
<li><p>如果id的个数一样, 那么在看<strong>类名个数</strong>, <strong>类名个数</strong>多的优先级最高</p>
</li>
<li><p>如果类名的个数一样, 那么在看<strong>标签名称的个数</strong>, 标签名称个数多的优先级最高</p>
</li>
<li><p>如果id个数一样, 类名个数也一样, 标签名称个数也一样, 那么久不会继续往下计算了, 那么此时谁<strong>写在后面</strong>听谁的, 也就是说优先级如果一样, 那么谁写在后面听谁的</p>
</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML5的CSS的三大特性&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://yoursite.com/categories/HTML5/"/>
    
    
      <category term="HTML5 CSS" scheme="http://yoursite.com/tags/HTML5-CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML-CSS选择器</title>
    <link href="http://yoursite.com/2016/12/22/HTML-CSS%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://yoursite.com/2016/12/22/HTML-CSS选择器/</id>
    <published>2016-12-22T01:25:49.000Z</published>
    <updated>2017-06-08T06:44:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTML5中的选择器</p>
<a id="more"></a>
<h2 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h2><ul>
<li><p>作用: 根据指定的标签的名称, 在当前界面中找到所有该名称的标签, 然后设置属性</p>
</li>
<li><p>格式:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">标签名称&#123;</div><div class="line">		 	</div><div class="line">	属性 : 值</div><div class="line">		 	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>注意点:</p>
<ul>
<li>标签选择器选中的是当前界面中的所有标签, 而不是单独选中某一个</li>
<li>标签选择器无论标签藏的多深都能选中</li>
<li>只要是HTML中的标签就可以作为标签选择器</li>
</ul>
</li>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">		</div><div class="line">	p&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h2><ul>
<li><p>作用: 根据指定的<strong>id</strong>名称找到对应的标签, 然后设置属性</p>
</li>
<li><p>格式:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#id名称&#123;</div><div class="line">		</div><div class="line">	 属性: 值</div><div class="line">		</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>注意点:</p>
<ul>
<li><p>每个HTML标签都有一个属性叫<strong>id</strong>, 也就是每个标签都可以设置id</p>
</li>
<li><p>在同一个界面中的id的名称是不可以重复的</p>
</li>
<li><p>在编写<strong>id选择器时</strong>一定要在id名称前面加上<strong>#</strong></p>
</li>
<li><p>id的名称是有一定的规范的</p>
<ul>
<li>id的名称只能有<strong>字母 数字 下划线</strong>组成</li>
<li>id的名称<strong>不能</strong>以数字开头</li>
<li>id的名称不能是HTML标签的名称</li>
<li>在企业开发中,如果仅仅是为了设置样式, 我们不会使用id, 因为id 是留给js使用的</li>
</ul>
</li>
</ul>
</li>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">		</div><div class="line">	#label1&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">&lt;/style&gt;</div><div class="line">	</div><div class="line">&lt;p id=&quot;label1&quot;&gt;迟到毁一生&lt;/p&gt;</div><div class="line">&lt;p id=&quot;label2&quot;&gt;早退穷三代&lt;/p&gt;</div><div class="line">&lt;p id=&quot;label3&quot;&gt;按时上下班&lt;/p&gt;</div><div class="line">&lt;p id=&quot;label4&quot;&gt;必成高富帅&lt;/p&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h2><ul>
<li><p>作用: 根据指定的<strong>类名称</strong>找到对应的标签, 然后设置属性</p>
</li>
<li><p>格式:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">.类名&#123;</div><div class="line">			</div><div class="line">	属性:值</div><div class="line">			</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>注意点:</p>
<ul>
<li><p>每个HTML标签都有一个属性叫<strong>class</strong>, 也就是每个标签都可以设置class(类名)</p>
</li>
<li><p>在同一个界面中的class的名称是可以<strong>重复</strong>的</p>
</li>
<li><p>在编写class选择器时一定要在class名称前面加上 <strong>.</strong> 的</p>
</li>
<li><p>类名的命名规范和<strong>id名称</strong>的命名规范一样</p>
</li>
<li><p>类名就是专门用来给某个特定的标签设置样式的</p>
</li>
<li><p>在HTML中每个标签可以同时绑定多个类名</p>
<ul>
<li><p>格式:</p>
<pre><code>&lt;标签名称 class= &quot;类名1 类名2 类名3 ...&quot;&gt;
</code></pre></li>
</ul>
</li>
</ul>
</li>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">		</div><div class="line">	.label1&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	.pa1&#123;</div><div class="line">			</div><div class="line">		font-size: 10px;</div><div class="line">			</div><div class="line">		font-family: &quot;微软雅黑&quot;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">&lt;/style&gt;</div><div class="line">	</div><div class="line">&lt;p class=&quot;label1&quot;&gt;迟到毁一生&lt;/p&gt;</div><div class="line">&lt;p class=&quot;label2&quot;&gt;早退穷三代&lt;/p&gt;</div><div class="line">&lt;p class=&quot;label1&quot;&gt;按时上下班&lt;/p&gt;</div><div class="line">&lt;p class=&quot;label4&quot;&gt;必成高富帅&lt;/p&gt;</div><div class="line">	</div><div class="line">&lt;p class=&quot;label1 pa1&quot;&gt;我是一个段落&lt;/p&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="id选择器和类选择器的区别"><a href="#id选择器和类选择器的区别" class="headerlink" title="id选择器和类选择器的区别"></a>id选择器和类选择器的区别</h2><ul>
<li><p>id和class的区别</p>
<ul>
<li><p>id不可以重复, class不可以重复</p>
</li>
<li><p>一个标签只能绑定一个id名称, 但是可以绑定多个class名称</p>
</li>
</ul>
</li>
<li><p>id选择器 和 class选择器的区别</p>
<ul>
<li>id选择器是以<strong>#</strong>开头, class是以 <strong>.</strong> 开头</li>
</ul>
</li>
<li><p>在企业开发中该用什么选择器</p>
<ul>
<li>id一般情况下是给js使用的, 所以除非特殊情况, 否则不要使用id去设置样式</li>
</ul>
</li>
<li><p>在企业开发中一个开发人员对类的使用可以看出他的技术水平</p>
<ul>
<li><p>一般情况下企业开发中要注重冗余代码的抽取</p>
</li>
<li><p>可以将一些公共的代码抽取到一个类选择器中,然后让标签和这个类绑定即可    </p>
</li>
</ul>
</li>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">		</div><div class="line">	.redColor&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	.font&#123;</div><div class="line">			</div><div class="line">		font-size: 30px;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	.line&#123;</div><div class="line">			</div><div class="line">		text-decoration: underline;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">&lt;/style&gt;</div><div class="line">	</div><div class="line">	</div><div class="line">&lt;p class=&quot;redColor font&quot;&gt;第一行&lt;/p&gt;</div><div class="line">	</div><div class="line">&lt;p class=&quot;font line&quot;&gt;第二行&lt;/p&gt;</div><div class="line">	</div><div class="line">&lt;p class=&quot;redColor line&quot;&gt;第三行&lt;/p&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h2><ul>
<li><p>作用: 找到指定标签的<strong>所有后代标签</strong>, 然后设置属性</p>
</li>
<li><p>格式:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">标签名称1 标签名称2&#123;</div><div class="line">				</div><div class="line">		属性: 值</div><div class="line">				</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>先知道名称叫做<strong>标签名称1</strong>的标签, 然后在这个标签下面去查找所有名称叫做<strong>标签名称2</strong>的标签,然后设置属性</li>
</ul>
</li>
<li><p>注意点:</p>
<ul>
<li><p>后代选择器必须用<strong>空格</strong>隔开</p>
</li>
<li><p>后代不仅仅是儿子, 也包括孙子 重孙子, 只要最终是放到指定标签中的都是后代</p>
</li>
<li><p>后代选择器不仅仅可以使用标签名称, 还可以使用其他的选择器</p>
</li>
<li><p>后代选择器可以通过空格符号一直延续下去</p>
</li>
</ul>
</li>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">		</div><div class="line">	div p&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	#div1 p&#123;</div><div class="line">			</div><div class="line">		color: green;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	.class1 p&#123;</div><div class="line">			</div><div class="line">		color: blue;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	li p&#123;</div><div class="line">			</div><div class="line">		color: skyblue;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	div ul li p&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">&lt;/style&gt;</div><div class="line">	</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">	</div><div class="line">&lt;div id=&quot;div1&quot; class=&quot;class1&quot;&gt;</div><div class="line">	</div><div class="line">	&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">		</div><div class="line">	&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">		</div><div class="line">	&lt;ul&gt;</div><div class="line">		&lt;li&gt;</div><div class="line">			&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">		&lt;/li&gt;</div><div class="line">	&lt;/ul&gt;</div><div class="line">		</div><div class="line">&lt;/div&gt;</div><div class="line">	</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h2><ul>
<li><p>作用: 找到指定标签中所有特定的<strong>直接子元素</strong>, 然后设置属性</p>
</li>
<li><p>格式:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">标签名称1&gt;标签名称2&#123;</div><div class="line">				</div><div class="line">			属性: 值</div><div class="line">				</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>先找到<strong>标签名称1</strong>的标签,然后在这个标签中查找所有直接子元素的名称叫做<strong>标签名称2</strong>的元素</li>
</ul>
</li>
<li><p>注意点:</p>
<ul>
<li><p>子元素选择器只会查找儿子, 不会查找其他被嵌套的标签</p>
</li>
<li><p>子元素选择器之间需要用 <strong>&gt;</strong> 符号连接, <strong>不能有空格</strong></p>
</li>
<li><p>子元素选择器不仅仅可以使用标签名称, 还可以使用其他选择器</p>
</li>
<li><p>子元素选择器可以通过 <strong>&gt;</strong> 符号一直延续下去</p>
</li>
</ul>
</li>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">	</div><div class="line">	div&gt;p&#123;</div><div class="line">			</div><div class="line">		color: skyblue;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	.class1&gt;p&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	#div1&gt;p&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	div&gt;ul&gt;li&gt;p&#123;</div><div class="line">			</div><div class="line">		color: blue;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">&lt;/style&gt;</div><div class="line">	</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">	</div><div class="line">&lt;div id=&quot;div1&quot; class=&quot;class1&quot;&gt;</div><div class="line">	&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">		</div><div class="line">	&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">		</div><div class="line">	&lt;ul&gt;</div><div class="line">		&lt;li&gt;</div><div class="line">			&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">		&lt;/li&gt;</div><div class="line">		&lt;li&gt;</div><div class="line">			&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">		&lt;/li&gt;</div><div class="line">	&lt;/ul&gt;</div><div class="line">		</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="后代选择器和子元素选择器直接的区别"><a href="#后代选择器和子元素选择器直接的区别" class="headerlink" title="后代选择器和子元素选择器直接的区别"></a>后代选择器和子元素选择器直接的区别</h2><ul>
<li><p>区别:</p>
<ul>
<li><p>后代选择器使用<strong>空格</strong>使用连接符号,子元素选择器使用 <strong>&gt;</strong> 作为连接符号</p>
</li>
<li><p>后代选择器会选中指定标签中所有的特定的后代标签, 孙子/ 重孙子</p>
</li>
<li><p>子元素选择器只会选中指定标签中,所有特定的直接标签 儿子</p>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>共同点:</p>
<ul>
<li><p>后代选择器和子元素选择器都可以使用标签名称 id名称 class名称 来作为选择器</p>
</li>
<li><p>后代选择器和子元素选择器都可以通过各自的连接符号一直延续下去</p>
</li>
</ul>
</li>
<li><p>如何选择:</p>
<ul>
<li><p>如果想选中指定标签中的所有特定的标签, 那么就使用后代选择器</p>
</li>
<li><p>如果只想选中指定标签中的所有特定儿子标签, 那么就使用子元素选择器</p>
</li>
</ul>
</li>
</ul>
<h2 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a>交集选择器</h2><ul>
<li><p>作用: 给所有选择器选中的标签中, <strong>相交的那部分</strong>标签设置属性</p>
</li>
<li><p>格式:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">选择器1选择器2&#123;</div><div class="line">				</div><div class="line">	属性: 值</div><div class="line">				</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>注意点;</p>
<ul>
<li><p>选择器和选择器之间<strong>没有任何</strong>的连接符号</p>
</li>
<li><p>选择器可以使用标签的名称 id名称 class名称 </p>
</li>
<li><p>交集选择器仅仅作为了解</p>
</li>
</ul>
</li>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">		</div><div class="line">	p.para1&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">&lt;/style&gt;</div><div class="line">	</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p class=&quot;para1&quot;&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p class=&quot;para1&quot;&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h2><ul>
<li><p>作用: 给所有选择器选中的标签设置属性</p>
</li>
<li><p>格式:</p>
<pre><code>选择器1,选择器2{

            属性: 值

        }
</code></pre></li>
<li><p>注意点:</p>
<ul>
<li>并集选择器必须使用 <strong>,</strong> 来连接</li>
</ul>
</li>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">	</div><div class="line">	.ht,.para&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">&lt;/style&gt;</div><div class="line">	</div><div class="line">&lt;h1 class=&quot;ht&quot;&gt;我是标题&lt;/h1&gt;</div><div class="line">	</div><div class="line">&lt;p class=&quot;para&quot;&gt;我是段落&lt;/p&gt;</div><div class="line">	</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">	</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="兄弟选择器"><a href="#兄弟选择器" class="headerlink" title="兄弟选择器"></a>兄弟选择器</h2><ul>
<li><p>相邻兄弟选择器 CSS2</p>
<ul>
<li><p>作用: 给指定选择器<strong>后面紧跟</strong>的那个选择器选中的标签设置属性</p>
</li>
<li><p>格式:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">选择器1+选择器2&#123;</div><div class="line">			</div><div class="line">		属性: 值</div><div class="line">			</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>* 注意点:

    * 相邻兄弟选择器必须通过 **+** 连接

    * 相邻兄弟选择器只能选中**紧跟其后**的那个标签,不能选中被隔开的标签

* 示例:

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">	</div><div class="line">	h2+p&#123;</div><div class="line">		</div><div class="line">	color: red;</div><div class="line">		</div><div class="line">&#125;</div><div class="line">	</div><div class="line">&lt;/style&gt;</div><div class="line">	</div><div class="line">&lt;!--&lt;h2&gt;我是标题&lt;/h2&gt;</div><div class="line">&lt;a href=&quot;#&quot;&gt;超链接&lt;/a&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;h2&gt;我是标题&lt;/h2&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;--&gt;</div></pre></td></tr></table></figure>
</code></pre><ul>
<li><p>通用兄弟选择器 CSS3</p>
<ul>
<li><p>作用: 给指定选择器后面的<strong>所有选择器</strong>选中的所有标签设置属性</p>
</li>
<li><p>格式:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">选择器1~选择器2&#123;</div><div class="line">			</div><div class="line">		属性: 值</div><div class="line">			</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>* 注意点:

    * 通用兄弟选择器必须用 **~** 连接

    * 通用兄弟选择器选中的是指定选择器后面的某个选择器选中的所有标签,无论有没有隔开都可以选中

* 示例

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">	</div><div class="line">h2~p&#123;</div><div class="line">		</div><div class="line">	color: green;</div><div class="line">		</div><div class="line">&#125;</div><div class="line">	</div><div class="line">&lt;/style&gt;</div><div class="line">	</div><div class="line">&lt;h2&gt;我是标题&lt;/h2&gt;</div><div class="line">&lt;a href=&quot;#&quot;&gt;超链接&lt;/a&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;a href=&quot;#&quot;&gt;超链接&lt;/a&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;h2&gt;我是标题&lt;/h2&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div><div class="line">&lt;p&gt;我是段落&lt;/p&gt;</div></pre></td></tr></table></figure>
</code></pre><h2 id="序选择器上"><a href="#序选择器上" class="headerlink" title="序选择器上"></a>序选择器上</h2><ul>
<li><p>同级别的第几个</p>
<ul>
<li><p><strong>:first-child</strong> 选中同级别中的<strong>第一个</strong>标签</p>
<ul>
<li>注意点: 不区分类型</li>
</ul>
</li>
<li><p><strong>:last-child</strong> 选中同级别的<strong>最后一个</strong></p>
<ul>
<li>注意点: 不区分类型</li>
</ul>
</li>
<li><p><strong>:nth-child(n)</strong> 选中同级别中的<strong>第n个</strong>标签</p>
<ul>
<li>注意点: 不区分类型</li>
</ul>
</li>
<li><p><strong>:nth-last-child(n)</strong> 选中同级别的<strong>倒数第n个</strong></p>
<ul>
<li>注意点: 不区分类型</li>
</ul>
</li>
<li><p><strong>:only-child</strong> 选中<strong>父元素中唯一的元素</strong></p>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>同类型的第几个</p>
<ul>
<li><p><strong>:first-of-type</strong> 选中同级别中同类型的<strong>第一个</strong>标签</p>
</li>
<li><p><strong>:last-of-type</strong> 选中同级别同类型的<strong>最后一个</strong></p>
</li>
<li><p><strong>:nth-of-type(n)</strong> 选中同级别同类型的<strong>第n个</strong></p>
</li>
<li><p><strong>:nth-last-of-type(n)</strong> 同级别同类型的<strong>倒数第n个</strong></p>
</li>
<li><p><strong>:only-of-type</strong> 选中<strong>父元素中唯一类型</strong>的某个标签</p>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">		</div><div class="line">	/*p:first-child&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;*/</div><div class="line">		</div><div class="line">	/*p:first-of-type&#123;</div><div class="line">			</div><div class="line">		color: blue;</div><div class="line">			</div><div class="line">	&#125;*/</div><div class="line">		</div><div class="line">	/*p:last-child&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;*/</div><div class="line">		</div><div class="line">	/*p:last-of-type&#123;</div><div class="line">			</div><div class="line">		color: blue;</div><div class="line">			</div><div class="line">	&#125;*/</div><div class="line">		</div><div class="line">	/*p:nth-child(3)&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;*/</div><div class="line">		</div><div class="line">	/*p:nth-of-type(3)&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;*/</div><div class="line">		</div><div class="line">	/*p:nth-last-child(2)&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;*/</div><div class="line">		</div><div class="line">	/*p:nth-last-of-type(2)&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;*/</div><div class="line">		</div><div class="line">	/*p:only-child&#123;</div><div class="line">			</div><div class="line">		color: purple;</div><div class="line">			</div><div class="line">	&#125;*/</div><div class="line">		</div><div class="line">	p:only-of-type&#123;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;		</div><div class="line">		</div><div class="line">&lt;/style&gt;</div><div class="line">	</div><div class="line">&lt;p&gt;我是段落1&lt;/p&gt;</div><div class="line">	</div><div class="line">&lt;div&gt;</div><div class="line">	&lt;p&gt;我是段落2&lt;/p&gt;</div><div class="line">		</div><div class="line">	&lt;h3&gt;标题&lt;/h1&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="序选择器下"><a href="#序选择器下" class="headerlink" title="序选择器下"></a>序选择器下</h2><ul>
<li><p><strong>:nth-child(odd)</strong> 选中同级别中的<strong>所有奇数</strong></p>
</li>
<li><p><strong>:nth-child(even)</strong> 选中同级别中的<strong>所有偶数</strong></p>
</li>
<li><p><strong>nth-child(xn+y)</strong> (不区分类型) <strong>x</strong>和<strong>y</strong>是用户自定义的, 而n是一个计数器, 从0开始递增</p>
</li>
<li><p>示例:</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">	&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">			</div><div class="line">		/*p:nth-child(odd)&#123;</div><div class="line">				</div><div class="line">			color: red;</div><div class="line">				</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">		p:nth-child(even)&#123;</div><div class="line">				</div><div class="line">			color: blue;</div><div class="line">				</div><div class="line">		&#125;*/</div><div class="line">			</div><div class="line">		/*p:nth-of-type(odd)&#123;</div><div class="line">				</div><div class="line">			color: red;</div><div class="line">				</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">		p:nth-of-type(even)&#123;</div><div class="line">				</div><div class="line">			color: blue;</div><div class="line">				</div><div class="line">		&#125;*/</div><div class="line">			</div><div class="line">		p:nth-child(2n+0)&#123;</div><div class="line">				</div><div class="line">			color: red;</div><div class="line">				</div><div class="line">		&#125;</div><div class="line">					</div><div class="line">	&lt;/style&gt;</div><div class="line">		</div><div class="line">	&lt;p&gt;我是项目&lt;/p&gt;</div><div class="line">	&lt;p&gt;我是项目&lt;/p&gt;</div><div class="line">	&lt;p&gt;我是项目&lt;/p&gt;</div><div class="line">	&lt;p&gt;我是项目&lt;/p&gt;</div><div class="line">	&lt;p&gt;我是项目&lt;/p&gt;</div><div class="line">	&lt;p&gt;我是项目&lt;/p&gt;</div><div class="line">	&lt;p&gt;我是项目&lt;/p&gt;</div><div class="line">	&lt;p&gt;我是项目&lt;/p&gt;</div><div class="line"></div><div class="line">	```	</div><div class="line">## 属性选择器上</div><div class="line"></div><div class="line">* 作用: 根据指定的属性名称找到对应的标签,然后设置属性</div><div class="line">			</div><div class="line">* 格式1:</div><div class="line"></div><div class="line">	* 作用: 根据指定的属性名称找到对应的标签,然后设置属性</div></pre></td></tr></table></figure>
<pre><code>[attribute]

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">* 格式2:</div><div class="line"></div><div class="line">	* 作用: 找到有指定属性, 并且属性的取值等于value的标签</div></pre></td></tr></table></figure>

[attribute=value]

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 最常见的应用场景, 就是用于区分input属性</div></pre></td></tr></table></figure>

input[type=password]{

    background-color: red;

}

&lt;input type=&quot;checkbox&quot; name=&quot;&quot; id=&quot;&quot; value=&quot;&quot; /&gt;
&lt;input type=&quot;password&quot; name=&quot;&quot; id=&quot;&quot; value=&quot;&quot; /&gt;
&lt;input type=&quot;email&quot; name=&quot;&quot; id=&quot;&quot; value=&quot;&quot; /&gt;

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">			</div><div class="line">* 示例</div></pre></td></tr></table></figure>
</code></pre>  <style type="text/css">

      /*p[id]{

          color: red;

      }*/

      /*p[class=cc]{

          color: red;

      }*/

      input[type=password]{

          background-color: red;

      }        

  </style>

  <p id="identity1">我是段落1</p><br>  <p id="identity2" class="cc">我是段落2</p><br>  <p class="cc">我是段落3</p><br>  <p id="identity4" class="para">我是段落4</p><br>  <p>我是段落5</p>

<p>  <input type="checkbox" name="" id="" value=""><br>  <input type="password" name="" id="" value=""></p>
  <input type="email" name="" id="" value="">

  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">	</div><div class="line">## 属性选择器</div><div class="line"></div><div class="line">* 属性的取值是以什么开头的</div></pre></td></tr></table></figure>
<p>  [attribute|=value] CSS2</p>
<p>  [attribute^=value] CSS3</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">	* CSS2中的只能找到value开头的,并且value是被-和其他内容隔开的</div><div class="line">	</div><div class="line">	* CSS3中的只要是以value开头的都可以找到,无论有没有被-隔开</div><div class="line">			</div><div class="line">			</div><div class="line">* 属性的取值是以什么结尾的</div></pre></td></tr></table></figure>
<p>  [attribute$=value] CSS3</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">			</div><div class="line">			</div><div class="line">* 属性的取值是否包含某个特定的值的</div></pre></td></tr></table></figure>
<p>  [attribute~=value] CSS2</p>
<p>  [attribute*=value] CSS3</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">	* 区别:</div><div class="line">			</div><div class="line">			CSS2中的只能找到独立的单词, 也就是包含value, 并且value是被空格隔开的</div><div class="line">			</div><div class="line">			CSS3中的只要包含就能找到		</div><div class="line">			</div><div class="line">* 示例:</div></pre></td></tr></table></figure>
  <style type="text/css">

      /*img[alt^=abc]{

          color: red;

      }*/

      /*img[alt|=abc]{

          color: red;

      }

      img[alt$=cee]{

          color: blue;

      }*/

      /*img[alt*=c]{

          color: yellow;

      }*/

      img[alt~=c]{

          color: yellow;

      }

  </style>

<p>  <img src="" alt="abcefg"><br>  <img src="" alt="abc-aa"><br>  <img src="" alt="abcdd"><br>  <img src="" alt="def c ee"><br>  <img src="" alt="qq"><br>  <img src="" alt="yy"></p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 通配符选择器</div><div class="line"></div><div class="line">* 作用: 给**当前界面上所有的标签**设置属性</div><div class="line">			</div><div class="line">* 格式:</div></pre></td></tr></table></figure>
<p>  *{</p>
<pre><code>属性: 值            
</code></pre><p>  }</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 注意点:</div><div class="line">	</div><div class="line">	* 由于通配符选择器是设置**界面上所有的标签**的属性, 所以在设置之前会遍历所有的标签, 如果当前界面上的标签比较多, 那么性能就会比较差		</div><div class="line">			</div><div class="line">* 示例:</div></pre></td></tr></table></figure>
  <style type="text/css">

      *{

          color: red;

      }

  </style>

  <h1>我是标题</h1>

  <p>我是段落</p>

<p>  <a href="#">超链接</a></p>
<p>  ```</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML5中的选择器&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://yoursite.com/categories/HTML5/"/>
    
    
      <category term="HTML5 CSS" scheme="http://yoursite.com/tags/HTML5-CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML - CSS文本属性</title>
    <link href="http://yoursite.com/2016/12/19/HTML-CSS%E6%96%87%E6%9C%AC%E5%B1%9E%E6%80%A7/"/>
    <id>http://yoursite.com/2016/12/19/HTML-CSS文本属性/</id>
    <published>2016-12-19T12:50:27.000Z</published>
    <updated>2017-06-08T06:20:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过CSS设置文本属性</p>
<a id="more"></a>
<h2 id="文本属性"><a href="#文本属性" class="headerlink" title="文本属性"></a>文本属性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">			</div><div class="line">		p&#123;</div><div class="line">			text-decoration: none; 	/*文本装饰*/</div><div class="line">			text-align: left;		/*文本对齐*/</div><div class="line">			text-indent: 2em;</div><div class="line">		&#125;</div><div class="line">	</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<ul>
<li><p>文本装饰的属性</p>
<ul>
<li><p>格式</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">text-decoration: underline;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>* 取值

    * underline 下划线
    * line-through 删除线
    * overline 上划线
    * none 什么都没有, 最常见的用途就是用于去掉超链接的下划线

* 快捷键

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">td  text-decoration</div><div class="line">tdu text-decoration: none;</div></pre></td></tr></table></figure>
</code></pre><ul>
<li><p>文本水平对齐的属性</p>
<ul>
<li><p>格式</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">text-align: center;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>* 取值

    * **left** 左
    * **right** 右
    * **center** 中

* 快捷键

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ta  text-align: left</div><div class="line">tar text-align: right</div><div class="line">tac text-align: center</div></pre></td></tr></table></figure>
</code></pre><ul>
<li><p>文本缩进的属性</p>
<ul>
<li><p>格式</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">text-indent: 2em;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>* 取值

    * 2em: em是单位, 一个em代表缩进一个文字的宽度

* 快捷键:

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ti text-indent:</div></pre></td></tr></table></figure>
</code></pre><h2 id="颜色控制属性"><a href="#颜色控制属性" class="headerlink" title="颜色控制属性"></a>颜色控制属性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">			</div><div class="line">		p&#123;</div><div class="line">			/*color: red;*/</div><div class="line">			/*color: rgb(255, 0, 0);*/</div><div class="line">			/*color: rgba(255, 0, 0, 1);*/</div><div class="line">			/*color: #FF0000;*/</div><div class="line">			color: rgb(0,200, 100);</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<ul>
<li><p>格式</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">color : 值</div></pre></td></tr></table></figure>
</li>
<li><p>取值:</p>
<ul>
<li><p>英文单词</p>
</li>
<li><p>rgb</p>
<ul>
<li><p>rgb其实就是三原色, 其中r(red 红色) g(green 绿色) b(blue 蓝色)</p>
</li>
<li><p>格式:</p>
<pre><code>rgb(0, 0, 0)
</code></pre></li>
<li><p>其中每一个数字取值是0~255之间, 0 代表不发光, 255代表发光, 值越大就越亮</p>
</li>
</ul>
</li>
<li><p>rgba</p>
<ul>
<li>r g b a( a 是透明度 其他的和 rgb 一样)</li>
</ul>
</li>
<li><p>十六进制</p>
</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过CSS设置文本属性&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://yoursite.com/categories/HTML5/"/>
    
    
      <category term="HTML5 CSS" scheme="http://yoursite.com/tags/HTML5-CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML - CSS文字属性</title>
    <link href="http://yoursite.com/2016/12/19/HTML-CSS%E6%96%87%E5%AD%97%E5%B1%9E%E6%80%A7/"/>
    <id>http://yoursite.com/2016/12/19/HTML-CSS文字属性/</id>
    <published>2016-12-19T12:18:19.000Z</published>
    <updated>2017-06-09T03:01:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>熟悉HTML5的CSS</p>
<a id="more"></a>
<h2 id="CSS的格式"><a href="#CSS的格式" class="headerlink" title="CSS的格式"></a>CSS的格式</h2><ul>
<li><p><strong>style</strong> 必须写在<strong>head</strong>标签开始标签和结束标签之间</p>
</li>
<li><p><strong>style</strong> 标签中的<strong>type</strong>属性其实何以不用写,默认就是 <strong>type=”text/css”</strong></p>
</li>
<li><p>设置样式的时候必须按照格式来设置. <strong>key : value</strong>, <strong>‘:’</strong> 不能省略, 分号大多数情况下也不能省略</p>
  <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;style type=<span class="string">"text/css"</span>&gt;</div><div class="line">		</div><div class="line">	标签名称&#123;</div><div class="line">		</div><div class="line">		属性名称: 属性对应的值;</div><div class="line">			</div><div class="line">		color: red;</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">&lt;<span class="regexp">/style&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="CSS文字属性"><a href="#CSS文字属性" class="headerlink" title="CSS文字属性"></a>CSS文字属性</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;style type=<span class="string">"text/css"</span>&gt;</div><div class="line">			</div><div class="line">		p&#123;</div><div class="line">			font-style: italic;		 <span class="comment">/*文字倾斜*/</span></div><div class="line">			font-weight: bold;		 <span class="comment">/*文字变粗*/</span></div><div class="line">			font-size: <span class="number">50</span>px;		 <span class="comment">/*文字大小*/</span></div><div class="line">			font-family: <span class="string">"微软雅黑"</span>;  <span class="comment">/*文字字体*/</span></div><div class="line">			</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">&lt;<span class="regexp">/style&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>规定文字样式的属性 <strong>font-style</strong></p>
<ul>
<li><p>格式</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">font-style: italic</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>* 取值

    * normal: 正常的,默认就是正常的
    * italic: 倾斜的

* 快捷键

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">fs:  font-style: italic</div><div class="line">fsn: font-style: normal</div></pre></td></tr></table></figure>
</code></pre><ul>
<li><p>规定文字粗细的属性 <strong>font-weight</strong></p>
<ul>
<li><p>格式</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">font-weight: bold</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code> * 单词取值

     * bold         加粗
    * bolder         比加粗还要粗
    * lighter     细线,默认就是细线

 * 数字取值 **100 ~ 900**之间整百的数字

* 快捷键

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">		fw: 	font-weight:</div><div class="line">		fwb:	font-weight: bold</div><div class="line">			</div><div class="line">		``` </div><div class="line"></div><div class="line">* 规定文字大小的属性 **font-size**</div><div class="line">			 </div><div class="line">	* 格式</div></pre></td></tr></table></figure>

    font-size: 50px;

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 单位: **px** (像素 pixel)</div><div class="line">		</div><div class="line">* 注意: 通过**font-size**设置大小一定要带单位 px</div><div class="line">	</div><div class="line">* 快捷键:</div></pre></td></tr></table></figure>

    fz font-size: ;

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">			  </div><div class="line">* 规定文字字体的属性 **font-family**</div><div class="line">	</div><div class="line">	* 格式</div></pre></td></tr></table></figure>

    font-family: &quot;微软雅黑&quot;

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">		</div><div class="line">* 注意点:</div><div class="line">	</div><div class="line">	* 如果取值是中文, 需要用双引号或者单引号括起来</div><div class="line">	 </div><div class="line">	* 设置的字体必须是用户电脑里面已经安装的字体, 否则没有效果</div><div class="line"></div><div class="line">* 快捷键:</div></pre></td></tr></table></figure>

    ff: font-family:

    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## CSS文字属性简写</div></pre></td></tr></table></figure>
</code></pre><style type="text/css">

        p{

            font: italic bold 50px "微软雅黑";

        }

</style>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 缩写的格式:</div></pre></td></tr></table></figure>
<pre><code>font: style weight size family;

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">			 </div><div class="line">* 例如:</div></pre></td></tr></table></figure>

font: italic bold 50px &quot;微软雅黑&quot;;

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">			</div><div class="line">* 注意</div><div class="line"></div><div class="line">	* 在缩写格式中 有的属性值可以省略**style, weight** 可以省略</div><div class="line">	</div><div class="line">	* 在缩写格式中 **style weight** 位置可以交换</div><div class="line">	</div><div class="line">	* 在缩写格式中,有些属性值不可省略,也不可以交换位置: **size, family**,并且必须写在所有属性的后面</div><div class="line"></div><div class="line">## CSS字体属性补充</div></pre></td></tr></table></figure>
</code></pre><style type="text/css">

        p{
            font-size: 50px;
            font-family: "字体1", "微软雅黑";
            font-family: "times new roman", "微软雅黑"
        }

</style>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 如果设置的字体不存在, 那么系统会使用默认的字体来显示宋体</div><div class="line"> </div><div class="line">* 如果设置的字体不存在, 而我们又不想用默认的字体来显示怎么办?</div><div class="line">	* 可以给字体设置备选方案</div><div class="line">	* 格式</div></pre></td></tr></table></figure>
<pre><code>font-family: &quot;字体1&quot;, &quot;备选方案1&quot;;

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 如果想给中文和英文分别设置单独设置字体,怎么办?</div><div class="line">			</div><div class="line">	* 中文字体里面包含了英文</div><div class="line">	</div><div class="line">	* 英文字体里面没有包含中文</div><div class="line">			</div><div class="line">	* 中文字体可以处理英文, 英文字体不能处理中文</div><div class="line">			</div><div class="line">	* 注意点: 如果想给界面中的英文单独设置字体, 那么英文的字体必须写在中文的前面, 否则不会生效</div><div class="line">	</div><div class="line">	* 补充, 在企业开发中最常见的字体有以下几个:</div></pre></td></tr></table></figure>

中文: 宋体/ 黑体/ 微软雅黑
英文: Times new roman/ arial

```
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;熟悉HTML5的CSS&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://yoursite.com/categories/HTML5/"/>
    
    
      <category term="HTML5 CSS" scheme="http://yoursite.com/tags/HTML5-CSS/"/>
    
  </entry>
  
  <entry>
    <title>无序列表</title>
    <link href="http://yoursite.com/2016/12/05/%E6%97%A0%E5%BA%8F%E5%88%97%E8%A1%A8/"/>
    <id>http://yoursite.com/2016/12/05/无序列表/</id>
    <published>2016-12-05T14:13:10.000Z</published>
    <updated>2017-06-08T06:15:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTML5的基本标签之无序列表</p>
<a id="more"></a>
<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul>
<li>无序列表: 没有先后之分,添加列表语义的(ul 标签)</li>
<li><p>无序列表格式:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">  &lt;ul&gt;</div><div class="line">				</div><div class="line">		&lt;li&gt;需要显示的条目的&lt;/li&gt;</div><div class="line">				</div><div class="line"> &lt;/ul&gt;</div><div class="line">		</div><div class="line">  ```	</div><div class="line">		</div><div class="line">* 无序列表例子</div></pre></td></tr></table></figure>
<ul><br>      <li>广州</li><br>      <li>北京</li><br>      <li>上海</li><br>      <li>安徽</li><br></ul>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 在**li 标签**里面可以添加其他的标签比如</div></pre></td></tr></table></figure>
<ul><br>      <li><br>          <h2>三国演义</h2><br>          <p>作者:罗贯中</p><br><br>      </li><br></ul>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">		</div><div class="line">		</div><div class="line">## 有序列表</div><div class="line"></div><div class="line">* 和无序列表差不多(ol 标签)</div></pre></td></tr></table></figure>
 <ol><br>      <li>演员</li><br>      <li>小丑</li><br>  </ol>

  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">		</div><div class="line">## 定义列表</div><div class="line"></div><div class="line">* 自定义列表格式</div></pre></td></tr></table></figure>
 <dl><br>      <dt>北京</dt>           <!--定义标题--><br>      <dd>中国的首都</dd>    <!--定义描述--><br>      <dt>上海</dt><br>      <dd>富人集中地</dd><br>  </dl>

 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">		</div><div class="line">* 同样可以在**dt标签**或**dd标签**添加其他标签</div></pre></td></tr></table></figure>
  <dl><br>      <dt><br>          <img src="美女1.jpg" width="150px" height="200px"><br>      </dt><br>      <dd><br>          <h3>美女</h3><br>          <p>这是一个美女,真的是美女</p><br>      </dd><br>  </dl>

  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">		</div><div class="line">* 也可以在**dd标签**里面添加**a标签**跳转到其他页面</div></pre></td></tr></table></figure>
  <dl><br>      <dt>购物指南</dt><br>      <dd><br>          <a href="锚点.html">购物流程</a>            <br><br>          <a href="假链接.html">会员介绍</a><br>          <br><br>          <a href="a标签的使用.html">常见问题</a><br>          <br><br>          <a href="美女1.jpg">联系客服</a><br><br>      </dd><br>  </dl>

<p>  ```    </p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML5的基本标签之无序列表&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://yoursite.com/categories/HTML5/"/>
    
    
      <category term="HTML5 基本标签" scheme="http://yoursite.com/tags/HTML5-%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>a标签的使用</title>
    <link href="http://yoursite.com/2016/12/05/a%E6%A0%87%E7%AD%BE%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2016/12/05/a标签的使用/</id>
    <published>2016-12-05T13:37:42.000Z</published>
    <updated>2017-06-08T05:37:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTML5的基本标签之a标签的使用</p>
<a id="more"></a>
<h2 id="a-标签-用来控制页面与页面直接跳转的标签"><a href="#a-标签-用来控制页面与页面直接跳转的标签" class="headerlink" title="a 标签 (用来控制页面与页面直接跳转的标签)"></a>a 标签 (用来控制页面与页面直接跳转的标签)</h2><ul>
<li><p><strong>href</strong> 指定需要跳转的目标界面</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;a href= &quot;指定需要跳转的目标界面&quot;&gt;需要展现给用户查看的内容&lt;/a&gt;</div><div class="line">&lt;a href= &quot;http://www.jianshu.com&quot;&gt;简书&lt;/a&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>也可以显示图片</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;https://www.cnswift.org&quot;&gt;</div><div class="line">		&lt;img src=&quot;美女1.jpg&quot; alt=&quot;图片&quot; width=&quot;50&quot; height=&quot;50&quot; title=&quot;美女图片&quot; /&gt;</div><div class="line">&lt;/a&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>跳转到其他本地H5页面</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;锚点.html&quot;&gt;卢梦如&lt;/a&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>使用<strong>target</strong>属性,用来控制如何跳转(是否新建选项卡)</p>
<ul>
<li><p><strong>_self</strong>: 在当天选项卡跳转,不新建界面,默认_self</p>
</li>
<li><p><strong>_blank</strong>: 用于在新的选项卡中跳转, 新建页面跳转</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;image/卢梦如.html&quot; target=&quot;_self&quot;&gt;卢梦如2&lt;/a&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>title</strong> 用来控制鼠标悬停时显示的文本</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;image/卢梦如.html&quot; title=&quot;会跳转到练习界面&quot; target=&quot;_blank&quot;&gt;卢梦如title&lt;/a&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>要想通过a标签跳转到指定的位置, 那么必须告诉a标签一个独一无二的标志,这样a标签才能在当前界面找到需要跳转到的位置, 通过 <strong>id</strong> 属性,给标签指定一个独一无二的标志</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;h2 id=&quot;top&quot;&gt;我是顶部&lt;/h2&gt;</div><div class="line">	</div><div class="line">// 调用 先指定html页面, 后面加#号和id</div><div class="line">	</div><div class="line">&lt;a href=&quot;锚点.html#top&quot;&gt;跳转到中部&lt;/a&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="假链接"><a href="#假链接" class="headerlink" title="假链接"></a>假链接</h2><ul>
<li>#: 会自动回到网页的顶部</li>
<li><p>javascript: 不会回到顶部,但是会提示找不到这个网页</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;#&quot;&gt;点我&lt;/a&gt;</div><div class="line">&lt;a href=&quot;javascript&quot;&gt;点我2&lt;/a&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML5的基本标签之a标签的使用&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://yoursite.com/categories/HTML5/"/>
    
    
      <category term="HTML5 基本标签" scheme="http://yoursite.com/tags/HTML5-%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>HTML基本标签</title>
    <link href="http://yoursite.com/2016/12/05/HTML%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2016/12/05/HTML基本标签/</id>
    <published>2016-12-05T13:10:21.000Z</published>
    <updated>2017-06-08T06:46:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTML5的基本标签</p>
<a id="more"></a>
<h2 id="基本标签"><a href="#基本标签" class="headerlink" title="基本标签"></a>基本标签</h2><ul>
<li><p>从 <strong>h1 ~ h6</strong> 总共6个标题</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;h1&gt;标题&lt;/h1&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p><strong>hr标签</strong> 分割线</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;hr /&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p><strong>p标签</strong> 从开一个段落</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;这是一个段落&lt;/p&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p><strong>br标签</strong> 不另起一行换行</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;br /&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="img标签-显示图片"><a href="#img标签-显示图片" class="headerlink" title="img标签 显示图片"></a><strong>img标签</strong> 显示图片</h2><ul>
<li><strong>src</strong> 指定图片名称 </li>
<li><strong>width</strong> 宽度 <strong>height</strong> 高度 只要指定了高度 或者 宽度 系统会自动计算出高度或者高度</li>
<li><strong>title</strong> 当鼠标停在图片上时需要弹出的框中显示什么内容  </li>
<li><p><strong>alt</strong> 用于告诉浏览器当需要的图片找不到时显示什么内容</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;美女1.jpg&quot; width=&quot;100&quot; height=&quot;200&quot; title=&quot;这是一个美女图片&quot; alt=&quot;对不起,您需要的图片不见了&quot;/&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML5的基本标签&lt;/p&gt;
    
    </summary>
    
      <category term="HTML5" scheme="http://yoursite.com/categories/HTML5/"/>
    
    
      <category term="HTML5 基本标签" scheme="http://yoursite.com/tags/HTML5-%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>UITabBarController</title>
    <link href="http://yoursite.com/2016/12/01/UITabBarController/"/>
    <id>http://yoursite.com/2016/12/01/UITabBarController/</id>
    <published>2016-12-01T12:45:23.000Z</published>
    <updated>2017-06-08T06:59:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>用Swift自定义UITabBarController</p>
<a id="more"></a>
<h2 id="UITabBarController"><a href="#UITabBarController" class="headerlink" title="UITabBarController"></a>UITabBarController</h2><ul>
<li><p>在AppDelegate里面设置rootViewController</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -&gt; Bool &#123;</div><div class="line"></div><div class="line">       // Override point for customization after application launch.</div><div class="line">       </div><div class="line">       self.window = UIWindow(frame: UIScreen.main.bounds)</div><div class="line">       </div><div class="line">       self.window?.backgroundColor = UIColor.white</div><div class="line">       </div><div class="line">       self.window?.makeKeyAndVisible()</div><div class="line">       </div><div class="line">       let rootVC = RootVC()</div><div class="line">       </div><div class="line">       self.window?.rootViewController = rootVC</div><div class="line">       </div><div class="line">       return true</div><div class="line">       </div><div class="line">  	&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>其次在自定义的UITabBarController里面 设置基础ViewController</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">func createTabBar() &#123;</div><div class="line">       </div><div class="line">       // 首页</div><div class="line">       </div><div class="line">       let homePageVC = HomePageVC()</div><div class="line">       </div><div class="line">       let homePageNav = UINavigationController(rootViewController: homePageVC)</div><div class="line">       </div><div class="line">       // 服务</div><div class="line">       </div><div class="line">       let serveVC = ServeVC()</div><div class="line">       </div><div class="line">       let serveNav = UINavigationController(rootViewController: serveVC)</div><div class="line">       </div><div class="line">       // 发布</div><div class="line">       </div><div class="line">       let publishVC = PublishVC()</div><div class="line">       </div><div class="line">       let publishNav = UINavigationController(rootViewController: publishVC)</div><div class="line">       </div><div class="line">       // 消息</div><div class="line">       </div><div class="line">       let messageVC = MessageVC()</div><div class="line">       </div><div class="line">       let messageNav = UINavigationController(rootViewController: messageVC)</div><div class="line">       </div><div class="line">       // 我的</div><div class="line">       </div><div class="line">       let myVC = MyVC()</div><div class="line">       </div><div class="line">       let myNav = UINavigationController(rootViewController: myVC)</div><div class="line">       </div><div class="line">       self.viewControllers = [homePageNav, serveNav, publishNav, messageNav, myNav]</div><div class="line">       </div><div class="line">  	&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>然后创建UITabBar上面的图标</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">func createTabBarImage() &#123;</div><div class="line">       </div><div class="line">       // 未选中的图标</div><div class="line">       </div><div class="line">       let unSelectImage = [&quot;home_unselect&quot;, &quot;serve_unselect&quot;, &quot;publish_unselect&quot;, &quot;message_unselect&quot;, &quot;my_unselect&quot;]</div><div class="line">       </div><div class="line">       // 选中之后的图标</div><div class="line">       </div><div class="line">       let selectImage = [&quot;home_select&quot;, &quot;serve_select&quot;, &quot;publish_select&quot;, &quot;message_select&quot;, &quot;my_select&quot;]</div><div class="line">       </div><div class="line">       // 5个TabBar的名称</div><div class="line">       </div><div class="line">       let tabbarName = [&quot;首页&quot;, &quot;服务&quot;, &quot;发布&quot;, &quot;消息&quot;, &quot;我的&quot;]</div><div class="line">       </div><div class="line">       for (index, item) in (self.tabBar.items?.enumerated())! &#123;</div><div class="line">           </div><div class="line">           // tabBar 标题</div><div class="line">           </div><div class="line">           item.title = tabbarName[index]</div><div class="line">           </div><div class="line">           // tabBar 选中的时候的图片</div><div class="line">           </div><div class="line">           item.selectedImage = UIImage(named: selectImage[index])</div><div class="line">           </div><div class="line">           // tabBar 未选中的时候的图片</div><div class="line">           </div><div class="line">           item.image = UIImage(named: unSelectImage[index])</div><div class="line">           </div><div class="line">       &#125;</div><div class="line">       </div><div class="line">   &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Swift自定义UITabBarController&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swift 控件" scheme="http://yoursite.com/tags/Swift-%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>逆向传值</title>
    <link href="http://yoursite.com/2016/11/28/%E9%80%86%E5%90%91%E4%BC%A0%E5%80%BC/"/>
    <id>http://yoursite.com/2016/11/28/逆向传值/</id>
    <published>2016-11-28T14:04:13.000Z</published>
    <updated>2017-06-08T06:10:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>用<strong>代理</strong>和<strong>闭包</strong>进行逆向传值</p>
<a id="more"></a>
<h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><ul>
<li><p>在第二个页面写一个闭包(要传的值是字符串, 整型, 字典)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">typealias InputClosureType = (String, Int, [String: String]) -&gt; Void</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>需要在第二个页面理创建一个闭包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var backClosure: InputClosureType?</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>在点击事件里执行闭包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">  if self.backClosure != nil &#123;</div><div class="line">            </div><div class="line">       self.backClosure?(&quot;卢梦如&quot;, 24, [&quot;name&quot;: &quot;卢梦如&quot;])</div><div class="line">            </div><div class="line">   &#125;</div><div class="line">        </div><div class="line">  ```	</div><div class="line"></div><div class="line">* 在第一个页面里创建第二个页面的实例的地方对闭包传值</div></pre></td></tr></table></figure>
<p>secondVC.backClosure = {</p>
<pre><code>(name: String, age: Int, dictionary: [String: String]) -&gt; Void in

// 打印传过来的数据

print(&quot;\(name) is \(age) years&quot;, dictionary)
</code></pre><p>}</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">        </div><div class="line">        </div><div class="line">## 代理</div><div class="line"></div><div class="line">* 在第二个页面里 声明一个代理</div></pre></td></tr></table></figure>
<p>protocol SecondViewControllerDelegate: NSObjectProtocol {</p>
<pre><code>func backValue(string: String, value: Int)
</code></pre><p>  }</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">		</div><div class="line">* 定义代理</div></pre></td></tr></table></figure>
<p>var delegate: SecondViewControllerDelegate?</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">		</div><div class="line">* 在点击事件里执行代理</div></pre></td></tr></table></figure>
<p>if self.delegate != nil {</p>
<pre><code>delegate?.backValue(string: &quot;卢梦如&quot;, value: 24)
</code></pre><p>}</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">		       </div><div class="line">* 在第一个页面里面遵守代理, 然后设置代理</div></pre></td></tr></table></figure>
<p>secondVC.delegate = self</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">		</div><div class="line">* 执行代理的方法</div></pre></td></tr></table></figure>
<p>func backValue(string: String, value: Int) {</p>
<pre><code>// 打印传入的数据

print(&quot;\(string) is \(value)&quot;)
</code></pre><p> }</p>
<p>```</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用&lt;strong&gt;代理&lt;/strong&gt;和&lt;strong&gt;闭包&lt;/strong&gt;进行逆向传值&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swift 功能" scheme="http://yoursite.com/tags/Swift-%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>UITableView</title>
    <link href="http://yoursite.com/2016/11/28/UITableView/"/>
    <id>http://yoursite.com/2016/11/28/UITableView/</id>
    <published>2016-11-28T12:48:02.000Z</published>
    <updated>2017-06-09T03:08:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>用Swift写的UITableView文本</p>
<a id="more"></a>
<h2 id="UITableView"><a href="#UITableView" class="headerlink" title="UITableView"></a>UITableView</h2><ul>
<li><p>创建 UITableView</p>
 <figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">self</span>.tableView = <span class="type">UITableView</span>(frame: <span class="keyword">self</span>.view.frame, style: .plain)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置代理</p>
 <figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">self</span>.tableView?.dataSource = <span class="keyword">self</span></div><div class="line">     </div><div class="line"><span class="keyword">self</span>.tableView?.delegate = <span class="keyword">self</span></div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>创建一个重用的单元格</p>
 <figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">self</span>.tableView?.register(<span class="type">SwiftCell</span>.<span class="keyword">self</span>, forCellReuseIdentifier: <span class="string">"cellID"</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置背景颜色</p>
 <figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">self</span>.tableView?.backgroundColor = <span class="type">UIColor</span>.white</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>添加到父视图</p>
 <figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">self</span>.view.addSubview(<span class="keyword">self</span>.tableView!)</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="代理方法"><a href="#代理方法" class="headerlink" title="代理方法"></a>代理方法</h2><ul>
<li><p>几组 Section</p>
 <figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">numberOfSections</span><span class="params">(<span class="keyword">in</span> tableView: UITableView)</span></span> -&gt; <span class="type">Int</span> &#123;</div><div class="line">  </div><div class="line">     <span class="keyword">return</span> <span class="number">3</span></div><div class="line">     </div><div class="line"> &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>每组有几个 cell</p>
  <figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</div><div class="line">       </div><div class="line">       <span class="keyword">return</span> <span class="number">10</span></div><div class="line">       </div><div class="line">   &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>设置 cell 的高度</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -&gt; CGFloat &#123;</div><div class="line">     </div><div class="line">      return 100</div><div class="line">     </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置 UITabelView headerView 的组尾View 的高度</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -&gt; CGFloat &#123;</div><div class="line">       </div><div class="line">       return 0</div><div class="line">       </div><div class="line">   &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>设置 UITabelView headerView 的组头View 的高度</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -&gt; CGFloat &#123;</div><div class="line">    </div><div class="line">    return 40</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>自定义UITabelView 的 headerView</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -&gt; UIView? &#123;</div><div class="line">       </div><div class="line">       let view = UIView(frame: CGRect(x: 0, y: 0, width: self.tableView!.frame.width, height: 40))</div><div class="line">       </div><div class="line">       view.backgroundColor = UIColor.orange</div><div class="line">       </div><div class="line">       return view</div><div class="line">       </div><div class="line">   &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>复用 cell ( 创建 cell 的时候必须在后面添加 <strong>as! SwiftCell</strong> )</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell &#123;</div><div class="line">     </div><div class="line">     let cell = tableView.dequeueReusableCell(withIdentifier: &quot;cellID&quot;, for: indexPath) as! SwiftCell</div><div class="line">     </div><div class="line">     // 设置箭头</div><div class="line">     </div><div class="line">     cell.accessoryType = .disclosureIndicator</div><div class="line">     </div><div class="line">     // 给 cell 上的UILabel 赋值</div><div class="line">     </div><div class="line">     cell.string = &quot;第\(indexPath.section)组, 第\(indexPath.row)行&quot;</div><div class="line"></div><div class="line">     return cell</div><div class="line">     </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>选中 某一个 cell</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">	func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) &#123;</div><div class="line">        </div><div class="line">        print(&quot;第\(indexPath.section)组, 第\(indexPath.row)行&quot;)</div><div class="line"></div><div class="line">    &#125;</div><div class="line">        </div><div class="line">	```  </div><div class="line">    </div><div class="line">* 滑动删除必须实现的方法</div></pre></td></tr></table></figure>
<p>  func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {</p>
<pre><code> print(&quot;修改11&quot;)

}
</code></pre>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">    </div><div class="line">* 滑动删除</div></pre></td></tr></table></figure>
<p>  func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -&gt; UITableViewCellEditingStyle {</p>
<pre><code>return UITableViewCellEditingStyle.delete
</code></pre><p>  }</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">    </div><div class="line">* 修改删除按钮的文字</div></pre></td></tr></table></figure>
<p>  func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -&gt; String? {</p>
<pre><code>return &quot;修改&quot;
</code></pre><p>  }</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 自定义UITableViewCell</div><div class="line"></div><div class="line">* 必须实现下面的2个方法</div></pre></td></tr></table></figure>
<p>  override init(style: UITableViewCellStyle, reuseIdentifier: String?) {</p>
<pre><code>super.init(style: style, reuseIdentifier: reuseIdentifier)

self.backgroundColor = UIColor.groupTableViewBackground

self.createUI()

}

required init?(coder aDecoder: NSCoder) {

fatalError(&quot;init(coder:) has not been implemented&quot;)
</code></pre><p>  }</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">    	</div><div class="line">* 然后在 **createUI()** 方法里面自定义cell 上的控件</div></pre></td></tr></table></figure>
<p>  func createUI() {</p>
<pre><code>self.label = UILabel(frame: CGRect(x: 10, y: 20, width: 50, height: 60))

label?.text = &quot;jfeijfowiejfoiewjweijfowejof&quot;

label?.numberOfLines = 0

label?.font = UIFont.systemFont(ofSize: 10)

self.contentView.addSubview(label!)
</code></pre><p>  }</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 赋值的时候可以在 类里面实现 **set get**方法来赋值</div></pre></td></tr></table></figure>
<p>  var string : String {</p>
<pre><code>get {

    return self.string

}

set {

    self.label?.text = newValue

}
</code></pre><p>  }</p>
<p>  ```</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Swift写的UITableView文本&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swift 控件" scheme="http://yoursite.com/tags/Swift-%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>UIScrollView</title>
    <link href="http://yoursite.com/2016/11/28/UIScrollView/"/>
    <id>http://yoursite.com/2016/11/28/UIScrollView/</id>
    <published>2016-11-28T12:30:01.000Z</published>
    <updated>2017-06-08T06:58:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>用Swift写的UIScrollView文本</p>
<a id="more"></a>
<h2 id="UIScrollView"><a href="#UIScrollView" class="headerlink" title="UIScrollView"></a>UIScrollView</h2><ul>
<li><p>创建 UIScrollView</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">let scrollView = UIScrollView(frame: self.view.bounds)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置 UIScrollView 的大小</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scrollView.contentSize = CGSize(width: self.view.frame.width * 4, height: self.view.frame.height)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置 UIScrollView 的偏移位置</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scrollView.contentOffset = CGPoint(x: self.view.frame.width, y: 0)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置是否反弹</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scrollView.bounces = true</div></pre></td></tr></table></figure>
</li>
<li><p>设置是否分页</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scrollView.isPagingEnabled = true</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置是否滚动</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scrollView.isScrollEnabled = true</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置 <strong>indicator</strong>( 滚动条的颜色 ) 风格</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scrollView.indicatorStyle = UIScrollViewIndicatorStyle.white</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置 内容的边缘和 Indicators 边缘</p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scrollView.contentInset = UIEdgeInsetsMake(0, 50, 0, 0)</div></pre></td></tr></table></figure>
</code></pre></li>
</ul>
<ul>
<li><p>手势放大缩小</p>
<ul>
<li><strong>.minimumZoomScale</strong> = 0.1  最小比例</li>
<li><p><strong>.maximumZoomScale</strong> = 3    最大比例</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">scrollView.minimumZoomScale = 0.1</div><div class="line">    	scrollView.maximumZoomScale = 3</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>设置代理</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scrollView.delegate = self</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>添加到父视图</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">self.view.addSubview(scrollView)</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="代理方法"><a href="#代理方法" class="headerlink" title="代理方法"></a>代理方法</h2><ul>
<li><p>返回一个放大或者缩小的视图</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">func viewForZooming(in scrollView: UIScrollView) -&gt; UIView? &#123;</div><div class="line">     </div><div class="line">       &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>开始放大或者缩小</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">func scrollViewWillBeginZooming(_ scrollView: UIScrollView, with view: UIView?) &#123;</div><div class="line">     </div><div class="line">   &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>缩放结束时</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">func scrollViewDidEndZooming(_ scrollView: UIScrollView, with view: UIView?, atScale scale: CGFloat) &#123;</div><div class="line">      </div><div class="line">	&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>视图已经放大或缩小</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">	func scrollViewDidZoom(_ scrollView: UIScrollView) &#123;</div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>滑动到顶部时调用该方法</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func scrollViewDidScrollToTop(_ scrollView: UIScrollView) &#123;</div><div class="line">      </div><div class="line">    	print(&quot;顶部&quot;)</div><div class="line">      </div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>正在滑动</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func scrollViewDidScroll(_ scrollView: UIScrollView) &#123;</div><div class="line">    </div><div class="line">  	print(&quot;正在滑动...&quot;)</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>开始拖动</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func scrollViewWillBeginDragging(_ scrollView: UIScrollView) &#123;</div><div class="line">      </div><div class="line">    	print(&quot;开始拖动&quot;)</div><div class="line">      </div><div class="line"> 	&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>结束拖动</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func scrollViewDidEndDragging(_ scrollView: UIScrollView, willDecelerate decelerate: Bool) &#123;</div><div class="line">      </div><div class="line">    	print(&quot;结束拖动&quot;)</div><div class="line">      </div><div class="line"> 	&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>开始减速</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func scrollViewWillBeginDecelerating(_ scrollView: UIScrollView) &#123;</div><div class="line">      </div><div class="line">    	print(&quot;开始减速...&quot;)</div><div class="line">      </div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>减速停止</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func scrollViewDidEndDecelerating(_ scrollView: UIScrollView) &#123;</div><div class="line">      </div><div class="line">    	print(&quot;减速停止&quot;)</div><div class="line">      </div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Swift写的UIScrollView文本&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swift 控件" scheme="http://yoursite.com/tags/Swift-%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>UITextView</title>
    <link href="http://yoursite.com/2016/11/22/UITextView/"/>
    <id>http://yoursite.com/2016/11/22/UITextView/</id>
    <published>2016-11-22T14:50:15.000Z</published>
    <updated>2017-06-09T02:51:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>用Swift写的UITextField文本输入框</p>
<a id="more"></a>
<h2 id="UITextView"><a href="#UITextView" class="headerlink" title="UITextView"></a>UITextView</h2><ul>
<li><p>创建UITextView</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">let textView = UITextView(frame: CGRect(x: 10, y: 100, width: 200, height: 100))</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>边框粗细</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">textView.layer.borderWidth = 1</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>边框颜色</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">textView.layer.borderColor = UIColor.gray.cgColor</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置字体大小</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">textView.font = UIFont(name: &quot;&quot;, size: 10)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置字体颜色</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">textView.textColor = UIColor.orange</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>是否可编辑</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">textView.isEditable = true</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>内容是否可选</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">textView.isSelectable = true</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>给文字中的电话号码和网址自动加链接</p>
<ul>
<li>UIDataDetectorTypes.<strong>phoneNumber</strong>      只有电话加链接</li>
<li>UIDataDetectorTypes.<strong>link</strong>             只有网址加链接</li>
<li><p>UIDataDetectorTypes.<strong>all</strong>              电话和网址都加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">textView.dataDetectorTypes = .all</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>自定义选择内容后的菜单</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">let mail = UIMenuItem(title: &quot;邮件&quot;, action: #selector(onMail))</div><div class="line">     </div><div class="line">let weixin = UIMenuItem(title: &quot;微信&quot;, action: #selector(onWeiXin))</div><div class="line">     </div><div class="line">let menu = UIMenuController()</div><div class="line">     </div><div class="line">menu.menuItems = [mail, weixin]</div></pre></td></tr></table></figure>
</li>
<li><p>添加到父视图</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">self.view.addSubview(textView)</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Swift写的UITextField文本输入框&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swift 控件" scheme="http://yoursite.com/tags/Swift-%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>UITextField</title>
    <link href="http://yoursite.com/2016/11/22/UITextField/"/>
    <id>http://yoursite.com/2016/11/22/UITextField/</id>
    <published>2016-11-22T13:54:48.000Z</published>
    <updated>2017-06-08T07:07:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>用Swift写的UITextField文本输入框</p>
<a id="more"></a>
<h2 id="UITextField"><a href="#UITextField" class="headerlink" title="UITextField"></a>UITextField</h2><ul>
<li><p>创建 UITextField</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">   let textField = UITextField(frame: CGRect(x: 10, y: 60, width: 200, height: 30)) </div><div class="line">   </div><div class="line">   ``` </div><div class="line">       </div><div class="line">* 文本提示文字</div></pre></td></tr></table></figure>
<p>  textField.placeholder = “请输入用户名”</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 文字大小超过文本框长度时自动缩小字号, 而不是隐藏显示省略号</div></pre></td></tr></table></figure>
<p> textField.adjustsFontSizeToFitWidth = true</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 最小可缩小的字号</div></pre></td></tr></table></figure>
<p> textField.minimumFontSize = 14</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 设置文本框的样式</div><div class="line"></div><div class="line"> * UITextBorderStyle.**none**           无边框</div><div class="line"> * UITextBorderStyle.**line**           直线边框</div><div class="line"> * UITextBorderStyle.**roundedRect**    圆角矩形边框</div><div class="line"> * UITextBorderStyle.**bezel**          边线+阴影</div></pre></td></tr></table></figure>
<p>   textField.borderStyle = .roundedRect</p>
   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 水平对齐方式    </div><div class="line">   </div><div class="line">  * NSTextAlignment.**right**  水平右对齐</div><div class="line">  * NSTextAlignment.**center** 水平居中对齐</div><div class="line">  * NSTextAlignment.**left**   水平左对齐</div></pre></td></tr></table></figure>
<pre><code>textField.textAlignment = NSTextAlignment.right

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 垂直对齐方式</div><div class="line">        </div><div class="line"> * UIControlContentVerticalAlignment.**top**    垂直居中对齐</div><div class="line"> * UIControlContentVerticalAlignment.**center** 垂直居中对齐</div><div class="line"> * UIControlContentVerticalAlignment.**bottom** 垂直向下对齐</div></pre></td></tr></table></figure>
</code></pre><p>  textField.contentVerticalAlignment = UIControlContentVerticalAlignment.bottom </p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 背景图片设置</div></pre></td></tr></table></figure>
<p>  textField.background = UIImage(named: “background”)</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">* 清除按钮</div><div class="line"> * UITextFieldViewMode.**whileEditing**   编辑时出现清除按钮</div><div class="line"> * UITextFieldViewMode.**unlessEditing**  编辑时不出现, 编辑后才出现清除按钮</div><div class="line"> * UITextFieldViewMode.**always**         一直显示清除按钮</div></pre></td></tr></table></figure>
<p> textField.clearButtonMode = UITextFieldViewMode.whileEditing</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">* 设置键盘类型</div><div class="line">        </div><div class="line"> * **Default**                     系统默认的虚拟键盘</div><div class="line"> * **ASCII Capable**               显示英文字母的虚拟键盘</div><div class="line"> * **Numbers and Punctuation**     显示数字和标点的虚拟键盘</div><div class="line"> * **URL**                         显示便于输入url网址的虚拟键盘</div><div class="line"> * **Number Pad**                  显示便于输入数字的虚拟键盘</div><div class="line"> * **Phone Pad**                   显示便于拨号呼叫的虚拟键盘</div><div class="line"> * **Name Phone Pad**              显示便于聊天拨号的虚拟键盘</div><div class="line"> * **Email Address**               显示便于输入Email的虚拟键盘</div><div class="line"> * **Decimal Pad**                 显示用于输入数字和小数点的虚拟键盘</div><div class="line"> * **Twitter**                     显示方便些Twitter的虚拟键盘</div><div class="line"> * **Web Search**                  显示便于在网页上书写的虚拟键盘</div></pre></td></tr></table></figure>
<p> textField.keyboardType = UIKeyboardType.default</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 使键盘成为第一响应事件</div></pre></td></tr></table></figure>
<p>  textField.becomeFirstResponder()</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 放弃第一响应事件</div></pre></td></tr></table></figure>
<p> textField.resignFirstResponder()</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 设置 return 键的样式</div><div class="line">  </div><div class="line"> * UIReturnKeyType.**done**              表示完成输入</div><div class="line"> * UIReturnKeyType.**go**                表示完成输入, 同时会跳到另一页</div><div class="line"> * UIReturnKeyType.**search**            表示搜索</div><div class="line"> * UIReturnKeyType.**join**              表示注册用户或添加数据</div><div class="line"> * UIReturnKeyType.**next**              表示继续下一步</div><div class="line"> * UIReturnKeyType.**send**              表示发送</div></pre></td></tr></table></figure>
<p>  textField.returnKeyType = .done</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 设置代理</div></pre></td></tr></table></figure>
<p> textField.delegate = self</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 添加到父视图</div></pre></td></tr></table></figure>
<p> self.view.addSubview(textField)</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* 当**UITextField**开始变化的时候的方法</div></pre></td></tr></table></figure>
<p> textField.addTarget(self, action: #selector(textFieldChange), for: .editingChanged)</p>
<p> func textFieldChange() {</p>
<pre><code>print(&quot;change&quot;)

}
</code></pre> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* **returen** 键的响应事件</div></pre></td></tr></table></figure>
<p>  func textFieldShouldReturn(_ textField: UITextField) -&gt; Bool {</p>
<pre><code>textField.resignFirstResponder()

   print(textField.text ?? &quot;没有输入值&quot;)

   return true
</code></pre><p> }</p>
<p>  ```</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Swift写的UITextField文本输入框&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swift 控件" scheme="http://yoursite.com/tags/Swift-%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>UIButton</title>
    <link href="http://yoursite.com/2016/11/21/UIButton/"/>
    <id>http://yoursite.com/2016/11/21/UIButton/</id>
    <published>2016-11-21T13:54:15.000Z</published>
    <updated>2017-06-08T06:06:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>用Swift写的UIButton按钮</p>
<a id="more"></a>
<h2 id="UIButton"><a href="#UIButton" class="headerlink" title="UIButton"></a>UIButton</h2><p>按钮有四中类型:</p>
<p> <strong>.system</strong>              前面不带图标, 默认文字颜色为蓝色, 有触摸时的高亮效果</p>
<p><strong>.custom</strong>              定制按钮, 前面不带图标, 默认文字颜色为白色, 无触摸时的高亮效果</p>
<p><strong>.contactAdd</strong>          前面带 “+”图标按钮, 默认文字颜色为蓝色, 有触摸时的高亮效果</p>
<p><strong>.detailDisclosure</strong>    前面带 “!”图标按钮, 默认文字颜色为蓝色, 有触摸时的高亮效果</p>
<ul>
<li><p>创建一个按钮 UIButton</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">let button = UIButton(type: .custom)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置按钮文字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">button.frame = CGRect(x: 10, y: 150, width: 100, height: 30)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置按钮文字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">button.setTitle(&quot;按钮&quot;, for: .normal)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>对于Custom定制类型按钮, 代码可以简化为:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">let button = UIButton(frame: CGRect(x: 150, y: 10, width: 100, height: 30))</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>按钮的文字设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">button.setTitle(&quot;普通状态&quot;, for: .normal)</div><div class="line">     </div><div class="line">button.setTitle(&quot;触摸状态&quot;, for: .highlighted)</div><div class="line">     </div><div class="line">button.setTitle(&quot;禁用状态&quot;, for: .disabled)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>按钮文字颜色的设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">   button.setTitleColor(UIColor.black, for: .normal)   // 普通状态下的文字颜色</div><div class="line">        </div><div class="line">   button.setTitleColor(UIColor.green, for: .highlighted)   // 触摸状态下的文字颜色</div><div class="line">        </div><div class="line">	button.setTitleColor(UIColor.yellow, for: .disabled)    // 禁用状态下的文字颜色</div><div class="line">        </div><div class="line">   ```    </div><div class="line">        </div><div class="line">* 按钮背景颜色设置</div></pre></td></tr></table></figure>
<p>button.backgroundColor = UIColor.black</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">        </div><div class="line">* 按钮文字图标的设置</div></pre></td></tr></table></figure>
<p>button.setImage(UIImage(named: “timg.jpg”), for: .normal)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">        </div><div class="line">* 触摸状态下按钮也不会变暗 (半透明)</div></pre></td></tr></table></figure>
<p>button.adjustsImageWhenHighlighted = false </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">        </div><div class="line">* 禁用状态下按钮也不会变暗 (半透明)</div></pre></td></tr></table></figure>
<p>button.adjustsImageWhenDisabled = false </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">* UIButton 上图片的样式</div></pre></td></tr></table></figure>
<p>button.imageView?.contentMode = UIViewContentMode.scaleAspectFit</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">     </div><div class="line">* 设置按钮的背景图片</div></pre></td></tr></table></figure>
<p>button1.setBackgroundImage(UIImage(named: “1”), for: .normal)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">        </div><div class="line">* 按钮触摸点击事件响应</div></pre></td></tr></table></figure>
<p>button.addTarget(self, action: #selector(buttonClick(but:)), for: .touchUpInside)</p>
<p>func buttonClick(but: UIButton) {</p>
<pre><code>print(but.title(for: .normal) ?? &quot;没有标题&quot;)   
</code></pre><p>}</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">        </div><div class="line">* 常用的触摸事件类型</div><div class="line">   * **touchDown** 单点触摸按下事件, 点触屏幕</div><div class="line">   * **touchDownRepeat** 多点触摸按下事件, 点触计数大于1, 按下第 2, 3 或 第 4 跟手指的时候</div><div class="line">   * **touchDraginside** 触摸在控件内拖动时</div><div class="line">   * **touchDragOutside** 触摸在控件外拖动时</div><div class="line">   * **touchDragEnter** 触摸从控件之外拖动到内部时</div><div class="line">   * **touchDragExit** 触摸从控件内部拖动到外部时</div><div class="line">   * **touchUpInside** 在控件之内触摸并抬起时</div><div class="line">   * **touchUpOutside** 在控件之外触摸并抬起时</div><div class="line">   * **touchCancel** 触摸取消事件, 即一次触摸因为放上太多手指而被取消,或者电话打断</div><div class="line">     </div><div class="line">* 添加到父视图</div></pre></td></tr></table></figure>
<p>self.view.addSubview(button)</p>
<p>```</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Swift写的UIButton按钮&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swift 控件" scheme="http://yoursite.com/tags/Swift-%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>UILabel</title>
    <link href="http://yoursite.com/2016/11/21/UILabel/"/>
    <id>http://yoursite.com/2016/11/21/UILabel/</id>
    <published>2016-11-21T13:53:46.000Z</published>
    <updated>2017-06-08T06:01:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>用Swift写的UILabel文本</p>
<a id="more"></a>
<h2 id="UILabel"><a href="#UILabel" class="headerlink" title="UILabel"></a>UILabel</h2><ul>
<li><p>创建 <strong>UILabel</strong> 并设置坐标</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">let label = UILabel(frame: CGRect(x: 10, y: 60, width: 300, height: 100))</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置文字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">label.text = &quot;卢梦如&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置字体颜色</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">label.textColor = UIColor.white</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置 UILabel 背景颜色</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">label.backgroundColor = UIColor.black</div></pre></td></tr></table></figure>
</li>
<li><p>设置对齐方式 (居左, 居中, 居右)</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">label.textAlignment = .right</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置字体及大小</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">label.font = UIFont(name: &quot;Zapfino&quot;, size: 20)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置字体</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">label.font = UIFont.systemFont(ofSize: 30)</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置文字过长时的省略方式</p>
<ul>
<li><strong>.byTruncatingTail</strong>   隐藏尾部并显示省略号</li>
<li><strong>.byTruncatingMiddle</strong>  隐藏中间部分并显示省略号</li>
<li><strong>.byTruncatingHead</strong>  隐藏头部并显示省略号</li>
<li><p><strong>.byClipping</strong>  截去多余部分也不显示省略号</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">	label.lineBreakMode = .byTruncatingTail</div><div class="line">	``` </div><div class="line">       </div><div class="line"></div><div class="line">       </div><div class="line">* 文字大小自适应标签宽度 (当文字超出标签宽度时, 自动调整文字大小, 使其不被截断)</div></pre></td></tr></table></figure>
</li>
</ul>
<p>label.adjustsFontSizeToFitWidth = true</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 使标签可以显示多行文字 (0 没有行数限制, 默认显示一行)</div></pre></td></tr></table></figure>
<p>label.numberOfLines = 0</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 设置文本高亮</div></pre></td></tr></table></figure>
<p>label.isHighlighted = true</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 设置文本高亮颜色</div></pre></td></tr></table></figure>
<p>label.highlightedTextColor = UIColor.green</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">       </div><div class="line">* 富文本设置</div></pre></td></tr></table></figure>
<p>let attributeString = NSMutableAttributedString(string: “welcome to China”)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">      </div><div class="line">* 从文本 0 开始 6 个字符字体 HelveticaNeue-Bold, 16号</div></pre></td></tr></table></figure>
<p>   attributeString.addAttribute(NSFontAttributeName,</p>
<pre><code>value: UIFont(name: &quot;HelveticaNeue-Bold&quot;, size: 16)!,
range: NSMakeRange(0, 6))
</code></pre>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">      </div><div class="line">* 设置字体颜色</div></pre></td></tr></table></figure>
<pre><code>attributeString.addAttribute(NSForegroundColorAttributeName,
                                    value: UIColor.black,
                                    range: NSMakeRange(0, 6))

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">      </div><div class="line">* 设置文字背景颜色</div></pre></td></tr></table></figure>
</code></pre><p>  attributeString.addAttribute(NSBackgroundColorAttributeName,</p>
<pre><code>value: UIColor.green,
range: NSMakeRange(0, 6))
</code></pre>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line">* 设置属性</div></pre></td></tr></table></figure>
<p>  label.attributedText = attributeString</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line">* 也可以一起设置</div></pre></td></tr></table></figure>
<p>  attributeString.addAttributes(</p>
<pre><code>[NSFontAttributeName : UIFont(name: &quot;HelveticaNeue-Bold&quot;, size: 16)!,
 NSForegroundColorAttributeName : UIColor.orange,
 NSBackgroundColorAttributeName: UIColor.yellow], 
 range: NSMakeRange(0, 3))        
</code></pre>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">* 设置属性</div></pre></td></tr></table></figure>
<pre><code>label.attributedText = attributeString

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">  </div><div class="line">* 把 **UILabel** 添加到父视图上</div></pre></td></tr></table></figure>
</code></pre><p>  self.view.addSubview(label)</p>
<p>  ```</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Swift写的UILabel文本&lt;/p&gt;
    
    </summary>
    
      <category term="Swift" scheme="http://yoursite.com/categories/Swift/"/>
    
    
      <category term="Swift 控件" scheme="http://yoursite.com/tags/Swift-%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Github pages 搭建个人博客</title>
    <link href="http://yoursite.com/2016/09/22/Hexo-Github-pages-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/09/22/Hexo-Github-pages-搭建个人博客/</id>
    <published>2016-09-22T14:28:48.000Z</published>
    <updated>2017-06-11T06:29:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>把搭建博客的每一步都记录下来.</p>
<a id="more"></a>
<h2 id="Github-hexo"><a href="#Github-hexo" class="headerlink" title="Github hexo"></a>Github hexo</h2><p>可以根据<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo文档</a>来开发,这里都有详细的教程.</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>安装<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></li>
<li>安装<a href="https://git-scm.com" target="_blank" rel="external">Git</a></li>
<li>安装hexo</li>
<li><p>在终端里面执行以下代码安装 <strong>npm</strong>:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure>
</li>
</ul>
<p>安装完之后在分别终端里面输入:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git --version</div><div class="line">node -v</div><div class="line">npm -v</div></pre></td></tr></table></figure>
<p>看到各个插件的版本之后才说明是准备工作完成.</p>
<h2 id="开始搭建博客"><a href="#开始搭建博客" class="headerlink" title="开始搭建博客"></a>开始搭建博客</h2><ul>
<li><p>找一个自己喜欢的路径,创建一个的文件夹Hexo,在终端里打开这个Hexo 文件夹,然后执行:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>到现在就安装好了所有的东西</p>
<p>继续在打开的Hexo文件的终端分别输入:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo server</div></pre></td></tr></table></figure>
<p>也可以简写为:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo s</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>hexo generate</strong> 是生成静态页面, <strong>hexo server</strong> 是启动本地调试.</p>
<p>完成之后打开浏览器输入网址 <strong>localhost:4000</strong>,就可以看到本地已经出现hexo初始的博客了</p>
<h2 id="在Github上面创建新的仓库"><a href="#在Github上面创建新的仓库" class="headerlink" title="在Github上面创建新的仓库"></a>在Github上面创建新的仓库</h2><ul>
<li><p>点击 <strong>New repository</strong> 进入创建仓库界面,新建的仓库名字格式必须是:xxxx.github.io,如下图</p>
<p>  <img src="http://ody22imht.bkt.clouddn.com/github1.io.png" alt="Alt text"></p>
</li>
<li><p>创建 <strong>SSH keys</strong> 在终端里面输入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~/.ssh</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>查看此文件夹里面是否有 <strong><em>id _rsa  id _rsa.pub</em></strong>  两个文件,如果有的话就说明已经有 <strong>SSH keys</strong> 了</p>
<p> 如果没有的话就自己生成一个,终端里面输入你自己的邮箱:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></div></pre></td></tr></table></figure>
<p>  然后会出现 :</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/Users/you/.ssh/id_rsa):</div></pre></td></tr></table></figure>
<p>  意思是让你输入 <strong><em>SSH keys</em></strong> 的保存地址 直接回车就好,不用理会,然后会出现:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): [Type a passphrase]</div></pre></td></tr></table></figure>
<p>  意思是让你输入密码,这个要记住,以后会用的到,创建成功之后他会提示你 <strong><em>SSH keys</em></strong> 保存到哪里,按照这个地址找到 <strong>id _rsa.pub</strong>. 这个就是 <strong><em>SSH key</em></strong>,用终端打开这个文件,然后拷贝里面的内容,最上面的那部分</p>
</li>
</ul>
<ul>
<li><p>为github仓库添加 <strong><em>SSH key</em></strong>,进入Github的设置里面,找到 <strong>SSH and GPG keys</strong>进入里面点击 <strong>New SSH key</strong> 把之前拷贝的内容放进去,然后确定就OK了.</p>
<p>在终端里面输入:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure>
</li>
</ul>
<p>  来测试链接是否成功.</p>
<p>  它可能会出现一些乱七八糟的提示,最后是问你yes/no,就输入yes.</p>
<p>  如果是:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">'/c/Users/2000104591/.ssh/id_rsa'</span>:</div></pre></td></tr></table></figure>
<p>  输入之前让你记住的那个密码就行了.</p>
<p>  最后提示你:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hi, 用户名/用户名.github.io! You<span class="string">'ve successfully authenticated, but GitHub does notprovide shell access.</span></div></pre></td></tr></table></figure>
<p>  这样就配置完毕了</p>
<ul>
<li><p>配置 <em>_config.yml</em> 文件,在让你新建的 <strong>Hexo</strong> 目录下有个 <em>_ config.yml</em> 文件,打开他把里面的 <strong>deploy:</strong> 下的东西改为</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">      <span class="built_in">type</span>: git</div><div class="line">      repository: https://github.com/lumengru/lumengru.github.io</div><div class="line">      branch: master</div></pre></td></tr></table></figure>
<p>配置完成以后,执行:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate 		</div><div class="line">hexo deploy</div></pre></td></tr></table></figure>
</li>
</ul>
<p>  如果报错:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Error: Deployer not found : github</div></pre></td></tr></table></figure>
<p>  执行如下命令:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<p>  成功之后再试一次输入:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>  提示你成功之后你就可以打开<strong>xxxx.github.io</strong>来查看你的博客了.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把搭建博客的每一步都记录下来.&lt;/p&gt;
    
    </summary>
    
      <category term="博客" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
